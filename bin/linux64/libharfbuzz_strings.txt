            
                
                   
            """"""""
          \v\v \v\v        \v\v"" , 
  aa RFA  ba KBA  fa KFA  ka AKA  ma HMA  na GRA  ra ARA  sa MSA  va RVA  ya MYA  za EZA  ab HSB  eb LEB  gb RGB  ib SIB  ib PPC  mb BMB  nb NEB  ob BIT  rb ERB  sb SOB  ac TAC  ec EHC  hc AHC  oc SOC  rc ERC  sc YSC  uc LSC  vc UHC  yc LEW  ad NAD  ed UED  vd VID  vd VHD  zd NZD  ee EWE  le LLE  ne GNE  oe OTN  se PSE  te ITE  ue QUE  af RAF  ff LUF  if NIF  jf IJF  of SOF  rf ARF  yf IRF  ag IRI  ag TRI  dg EAG  lg LAG  ng AUG  ug JUG  vg XNM  ah UAH  eh RWI  ih NIH  oh OMH  oh PPC  rh VRH  th IAH  th PPC  uh NUH  yh0EYH  yh EYH  zh REH  ai ANI  di DNI  di YLM  ei ELI  gi OBI  ii MIY  ki KPI  ni DNI  ni YLM  oi ODI  si LSI  ti ATI  ui UNI  uiKUNI  wi RWI  aj NAJ  ij IIJ  vj VAJ  wj VAJ  ak TAK  gk0NOK  ik KIK  jk AUK  kk ZAK  lk NRG  mk MHK  nk NAK  ok ROK  ok HOK  rk RNK  sk HSK  uk RUK  vk MOK  wk ROC  yk RIK  al TAL  bl ZTL  gl GUL  il MIL  nl NIL  ol OAL  tl HTL  ul BUL  vl IVL  gm GLM  hm HAM  im IRM  km DKM  lm LAM  lm RLM  nm GNM  om LOM  om MOR  rm RAM  sm YLM  tm STM  ym MRB  an UAN  bn RON  dn BDN  en PEN  gn GDN  ln DLN  nn NYN  on RON  rn BDN  vn VAN  vn HTA  yn IHC  co ICO  jo BJO  mo ORO  ro IRO  so SSO  ap NAP  ip LAP  lp KLP  sp SAP  tp GTP  uq ZUQ  mr SMR  nr NUR  or MOR  ur SUR  wr AUR  as NAS  cs DRS  ds DNS  es MSN  gs OGS  hs SOB  hs VRH  hs BRS  is HNS  ks YKS  ls VLS  ms OMS  ns0ANS  os LMS  qs IQS  rs BRS  ss ZWS  ts TOS  us NUS  vs EVS  ws KWS  at MAT  et LET  gt JAT  ht AHT  it YGT  kt MKT  lt LGT  nt ANT  ot NGT  rt KRT  st GST  tt TAT  wt IWT  wt AKA  yt THT  gu GYU  ku RKU  ru DRU  zu BZU  ev NEV  iv TIV  ov LOV  aw NLW  ow FLW  hx SHX  iy IIJ  oy ABY  az AHZ  hz SHZ  uz LUZ
 !"#$%&'(!)*+,-./0'
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !&&             
 !{vvv v{vv
 "& \v      
 ##            # !$$             
 %&&             
 %''             
 %((             
 **))))))))))))*)
 1" "\v 2++3   \v""""""
 5OQdeUf{|^
 aby
 ach PPC ndh0IAH aeh NMH ijh YLM tlh NIQ amh NMH cmh NMH dmh DMH dmh NMH emh NMH gmh NMH hmh NMH imh NMH jmh NMH lmh NMH mmh NMH pmh NMH qmh NMH rmh NIQ smh NMH wmh NMH ymh NMH zmh ZMH zmh NMH enh HHC jnh NMH onh DNH coh  OH ioh HTA joh RAH joh JAR arh NIQ mrh NMH bsh BSU nsh SHZ juh NMH puh HTA suh NYM cwh PPC wyh EYH ybi OJI rci PPC adi HUL bdi PPC bgi IBE bhi PPC cji OJI eji OJI nji OJI sji OJI eki UNI ekiKUNI tki UNI gni HTA hni GNI iri
 ahk ISK bhk DBX khk GNM nhk
 als
 ams MSS dms NBM jms MSL lms
 anl0DAB lnl0DAB uol PPC irl HUL mrl HUL trl PPC bsl
 ats PPC vts GIS qus RUS rus
 bby LMB dby KRA rcy
 bid KND kid KND nid KND pid KND qid QID qid AZZ wid KND ejd RJD kjd PPC rjd0RJD skd KND gnd NUD knd
 bmb
 bml
 bng NIQ ong NOG wng AUG mog KOK qog PPC xog0DAB epg PPC org
 btb ITB dtb DTB dtb KTB itb
 bvk YLM lvk NRK qvk NRK rvk YLM tvk NRK uvk NRK yvk NRK wwk PPC ywk0NOK cxk SMK dxk YLM fxk NRK kxk NRK lxk UUK uxk IUK kyk
 bws RMC cws KWS hws KWS kws
 cbb CBB cbb KTB jbb LMB pbb0DAB rbb
 crs DRS krs
 ctt NYM mtt HTA qtt QTT qtt HMT qtt RBB aut
 cvs PPC evs
 ddy IIJ hiy IIJ miy
 dok
 dom PPC kom
 dot0DOT iot GNT jot NYM lot HTA rot0DAB ipt IPT ipt PPC frt PPC krt
 dum PPC ium YLM num
 dvj PPC aak KRK bak0BAK bak RBB cak
 eaa IQS oaa ARA taa IQS aba
 eag
 ebl KAL jbl KDL lbl KIB ecl YLM fcl YLM idl0NOK kdl
 ent
 enz DNZ moz NIQ eqz AHZ msz YLM muz CRL byz AHZ gyz AHZ jyz AHZ nyz AHZ pyz NIQ jzz AHZ
 epf PPC buf LUF cuf LUF euf LUF fuf ATF fuf LUF huf LUF iuf LUF quf LUF ruf LRF vuf VUF vuf LUF aag DAG cag PPC dag
 epk LPK lpk
 epm JAM gqm YLM hrm NIQ jrm AMH csm KNM hsm GLM ism YLM ism PPC htm
 eun0DAB uun0DAB zun HAN ewn LMB dyn HUL nyn LKN cjo BJO gjo BJO sjo RCO sjo BJO wjo BJO dko OJI iko LAK mko HOK rko OJI xno PPC roo PPC cro ORO nro YLM oro
 eve NVE nve KVE owe ITB oye LAK baf PPC naf0NAF naf ITB raf
 fcs PPC hcs NIQ ics PPC kcs DAS scs SCS scs ALS scs HTA cds DRS hds RUK nds DRS sds RBB hes ANS kes HTA zes NIQ mfs MFS mfs NMH cgs LAK ogs
 fdm KOM ydm ELM nem EDM oem YLM afm AFM afm YLM bfm YLM efm EFM efm PPC pfm PPC agm AGS chm NYM rhm AML vhm KRA nim NIM nim YLM zim
 fen PPC lgn WML mgn PPC ogn TXS rgn
 fil BML ril PPC wil YLM yil0DAB bkl HUL okl HUL skl HUL dll DAL aml
 fnt IRD fnt RAF gnt
 gdn
 gha WGA tha HTA gia PPC iia AWS iia RYS wia IRA pja ARA tja ARA bka BKA bka KTB nla IQS sla IQS fma NBH wma RYS aoa PPC apa HTA cpa ARA dpa ARA jpa HTA kpa HTA lpa HTA mpa HTA wpa HTA bra ARA ira
 gis
 gmt PPC hmt HMT hmt RBB nmt
 gmx LMB mmx YLM mmx PPC vmx GLM wmx GLM jnx TXS qnx TXS rnx RGD epx EPX epx LPK lsx LSS lsx ALS lsx HTA tsx GIS pux HTA owx DOT jay0DAB kay
 gnm
 gos
 gug AUG iug AUG kug ZMG lug PPC nug AUG iwg HTA nyg PPC aah HTA eah ORO iah0IAH kah SHZ lah
 hab PPC iab LMB lab ILB uab
 has KAY mas AAP yas
 hba ARA qba ABA sba PPC vba ARA fca NAF fca PPC mca ARA qca ARA rca RCA rca NYM wca ARA xca ARA yca YCA yca ARA ada GND fda ARA pda NZD bea ARA cea ARA bfa ARA kfa
 hcm
 hhc
 hnm0DAB knm DNM knm KNM pnm SHZ snm NAM wnm NOM wnmTNOM xnm
 hok
 hsb
 icb UAB lcb KIB qcb HCB rcb HTA aeb HTA beb ITB reb RBB web PPC lfb0DAB qfb DAB tfb TLB ufb HAL yfb GAB ngb ILB pgb ILB qgb QGB qgb JAR rgb NIQ bhb IHB khb KIB rhb GLM lib
 iod RGD hrd GNM ird
 iok POK iok MOK pok
 jhcNHCC khc0KHC mhc AMH mhc AML nhc PPC phc PHC phc YAS phc HTA qhcNHCC zhcNHCC wic BJO yjc SHZ akc NIQ bkc RUK nkc NIQ skc PPC tkc KHC zkc NYM clc HTA dlc RYS elcNHCC jlc NIQ slc NAS tlc NIQ nmc SHZ rmc NIQ bnc NIQ hnc NIQ knc NIQ lncNHCC pnc SHZ rnc BRS tncNHCC unc RBB wnc NIQ aoc YLM boc NYM qoc HTA apcNHCC epc PPC fpc PPC ipc PPC xpc SHZ dqc NMH uqc HUQ uqc ZUQ hrc TRC irc PPC jrc RCE jrc RCY jrc ERC krc RCW krc RCY krc ERC lrc RCE lrc RCY lrc ERC mrc RCM mrc RCL mrc ERC prc PPC rrc
 jtb YLM mtb MTB mtb KTB otb KIB stb STB stb KTB xtb XTB xtb KTB ztb ZTB ztb KTB mub ITB evb YLM uvb YLM ewb NRK kxb HUL oxb PPC pxb ITB rxb UBR nyb LIB vyb VYB vyb LMB czb GLM jzb PPC kzb PPC aac NYM cac NYM fac RRC fac HTA kac KAC kac NYM kbc KBC kbc PPC lbc NIQ lcc PPC mcc PPC occNHCC qcc KRA odc SHZ kec NIQ yec NIQ mfc LAH mfc NIQ fhc NYM ghc
 kal
 kam RKM mam MAM mam NYM nam KNM pam
 kek KEK kek NYM xek NKK afk DOK rfk CAK xfk LUK yfk NMK egk
 kke ITE yke NRK kme KME kme KNM yme NYM bne LAK fne ENF hne ENT gse NOG ise KPI kse KPI ote ITB que
 kkv YLM pkv PPC tkv YLM slv ELF wmv KAM orv ORV orv ITE nsv NAS gaw
 klb KLB klb NRK nlb KIB tlb
 kra
 lag
 lap
 llp GLP nlp PPC plp PAP tlp GLM lmp PPC ymp PPC cop NYM hop HOP hop NYM vop PPC app GAB erp PPC prp JUG srp IRD srp RAF esp YLM tsp SAP bup NIQ zup NIQ owp OWP owp NRK wwp NRK buq HWQ buq ZUQ cuq CUQ cuq NYM duq IVQ duq ZUQ fuq ZUQ guq IVQ guq ZUQ huq HUQ huq ZUQ kuq ZUQ luq HUQ luq ZUQ muq NYM puq IVQ puq ZUQ ruq HWQ ruq ZUQ suq HUQ suq ZUQ vuq NYM wuq IVQ wuq ZUQ xuq HWQ xuq ZUQ yuq ZUQ avq HWQ avq ZUQ cvq ZUQ evq ZUQ hvq HWQ hvq ZUQ ivq IVQ ivq ZUQ jvq IVQ jvq ZUQ lvq HWQ lvq ZUQ mvq HWQ mvq ZUQ nvq HWQ nvq ZUQ ovq IVQ ovq ZUQ pvq HWQ pvq ZUQ svq ZUQ wvq HWQ wvq ZUQ zvq IVQ zvq ZUQ awq HWQ awq ZUQ cwq ZUQ hwq HWQ hwq ZUQ swq HWQ swq ZUQ twq HTA axq HWQ axq ZUQ cxq HWQ cxq ZUQ hxq HWQ hxq ZUQ lxq IVQ lxq ZUQ nxq HWQ nxq ZUQ oxq HWQ oxq ZUQ pxq ZUQ rxq IVQ rxq ZUQ txq HWQ txq ZUQ uxq ZUQ wxq HWQ wxq ZUQ gar HUL lar NIQ bbr GLP lbr KIB fcr PPC fir FIR fir RBB ikr KRA cmr YOR fmr YOR lmr YOR nmr YOR omr YOR smr
 lmb
 luj
 luk
 lut
 mak BMK rak NRK dbk BAK ybk RNK ack KHK ack SHK ack VHK nck PPC rdk MRK tdk YUK aek AEK aek PPC bek
 mal
 mbw  AW rbw GAW rbw JAR aew NRK sew PPC uew NIQ clw RMC elw GIS klw HTA inw RMC yrw WAM gsw NOG uuw SHZ ayw TDW ayw NYW lax MLK lax DOT nax KES dbx
 mcm PPC rcm
 mkj NRK pkj NRK duj
 mmb GLM dpb0DAB lpb PPC qpb PPC iqb CRL kqb0DAB arb IRB crb PPC irb
 mrb
 mrk
 mrs PPC nrs PPC ors DRS srs HTA hss ARA lss
 msi
 msk
 msl HUL gtl IVL htl
 mss
 nag SHZ rag
 nib ODE uib NIQ njb YLM ojb0DAB qjb GLM sjb PPC tjb NLB fkb
 nkm PPC rkm
 nlk LAK bmk NBM nmk
 nlm
 nml MAL wml
 nms MSI sms SKS tms NIQ bns ABI hns
 nra PAM qra ARA sra ARA yra ROM yra ARA zra ARA jta RCR vta TLA jua RBB zua ARA lva ARA cya MYA hya ARA lya ARA nya ARA pya ARA rya MYA bza BZA bza EZA dza HAN jza EZA nza HAN zza HAN dab0DAB gab
 nrk
 nws RBB vws WAM cys RYS aat HTA jat
 okb LMB alb FKB elb NLB glb ABI ilb
 omk
 oscNHCC psc SHZ vsc NIQ wsc RCN wsc CHN wsc ERC ysc NIQ ctc HTA dtc NIQ etcNHCC htc NIQ ltcNHCC stc KIB utc NYM cucNHCC nvcNHCC dwc RCD dwc RCT dwc ERC hzc SHZ ozc SHZ tzc NIQ oad NIQ pad SIN rcd PPC ned ALS ned HTA ped PPC ogd OGD ogd RGD rgd HTA dhd WAM vhd
 otl HUL stl HUL sul ZIM sul NIQ yul HUL zul CRL ivl
 pap0PAP pap PPC sap
 pom NYM rom
 ppk NRK vpk ZOK vpk MOK ypk KYK sqk SIK yqk TRK crk RAK crk LAB irk IRK irk PPC krk
 pud YLM kwd IUK uwd JUD ywd JUD uyd LUJ nzd
 pum JAR qum NMH bvm HTA evm WAM fvm GNM kwm KNM qwm NIQ rwm WAM wwm WWM wwm NMH mym NEM qym KNM vym ZRE bzm RBB szm PPC gan GAN gan PPC nan SHZ san
 qat QAT qat HMT qat RBB sat PPC uat HTA bct HTA ect HTA hct PPC pct NIQ sct PPC yct LUT zct NIQ xdt GLM cet LAK met NMT zet RBB nft HTA hgt PPC jgt SIN ngt
 qlm NLM qlm KNM rlm
 rah IRH xah0IAH nbh
 rce
 rgt
 rmk RUK smk
 rmm NMH cnm HCM dnm
 rrg RBB trg ORG urg GOS wsg SLA aug
 rro OJI sro YLM yro IRO wto BJO auo RBB aap
 rtm WAM stm
 sfa PPC uga NYM wga
 shk
 sik
 sip PPC hkp NIQ okp LAK glp0GLP klp
 soy NIQ auy NYM euy HHZ hcz AHZ jdz RMC hez AHZ nez RBB bgz AHZ hgz HGZ hgz RBB mgz AHZ ngz AHZ dhz AHZ nhz AHZ bkz AHK jlz AHZ mlz YLM nlz AHZ qlz AHZ imz YLM zmz0DAB dnz
 src PPC trc
 ssk SIK wsk WSK wsk NRK btk BEK utk NOK wtk HTA iuk
 svl IVL gwl HUL hzl THZ zzl ZAL iam HTM jam
 taf TAF taf AKA lbf KIB mff LUF lif LIP mlf LAH mlf NIQ pmf PMF pmf LMB gnf PPC sof
 tbp SAP ubp SAP ecp GLP kcp NIQ mcp PPC udp NRK aep PPC lep YLM sep RAF yep PPC agp ARA agp PPC hip HIP hip PPC lip
 tcm ITB edm
 thk THK thk NHK vhk
 tht HTA vht VHT vht HMT vht RBB zht ZHT zht HMT zht RBB ait RBB git RGT ojt RBB gkt GLM mkt
 trk RNK urk UUK hsk0HSK isk
 ugn HAN chn HAN dhn AUG ehn HAN ghn HAN ihn HAN khn HAN mhn HAN nhn HAN phn HAN qhn HAN thn HAN vhn HAN whn HAN xhn HAN yhn HAN zhn HAN qin LAK sin
 uik UIK uik AZZ bjk NYM hjk AHK pjk PJK pjk NRK tjk NRK nkk
 ukm KNM elm
 urt AUT urt RYS gst
 usn HAN otn
 uuk HTA wuk0DAB yuk
 uut HTA vut
 uyk UYK uyk NRK cal NYM dal DUJ hal
 vin LIG tjn PPC zjn SIN okn
 vmk PPC wmk OMK cnk RNK gnk0NOK jnk NYM nnk KOK rnk
 vps IRO yps LAK brs
 wag
 wam
 wgs GHC ihs IHS ihs RBB lhs NIQ uhs ARA yhs RBB bis
 wks PPC yks
 wmr YOR ymr YMR ymr YOR zmr KRA mor YOR por PPC ctr NIQ eur YSR rwr WAM das
 wmt YLM ant
 wrd IRD wrd RAF bsd BSL ytd PEN nud
 xag ORO zag ORO mbg WAG ecg HTA fcg PPC lcg PPC rcg PPC adg JAR ogg NOG ahg RBB chg TRI khg NRK ohg RBB big PPC lig0LIG ujg JAR pkg PKG pkg LPK dlg NAN zmg
 xaj YLM ebj RBB nbj RBB ogj LMB iij
 xam YLM xam PPC fbm PPC nbm
 xcn HAN bdn
 xgt HTA ygt
 xkn OJI aln LMB eln HUL nln HAN vln HAN hnn LMB znn LMB don ATN ipn PEN lpn HAN oqn OKN ksn SAN msn
 xrc RRC xrc HTA ascNHCC hsc NIQ jsc NIQ lsc
 yok HTA zok
 yut LAK yvt PPC cxt HTA yxt GLM vyt VUT hzt NYM jzt NYM mzt MZT mzt RBB ozt OZT ozt NYM lbu KIB iku IUK nlu PPC rnu NUM kru YLM psu NYM nzu BZU szu BZU pav NIQ civ PPC tiv
 zal
 zan HAN hcn HAN icn HAN jcn HAN lcn HAN rcn
 zbb ARA ccb ILB hcb
 zis RBB djs MSK ojs BIS sjs RBB gks GLM rks KRS sks
 zkk HTA mlk
 zti NYM lxi NYM caj NYM kaj YLM maj MAJ maj PPC naj
!!(type & GPOS_impl::ATTACH_TYPE_MARK) ^ !!(type & GPOS_impl::ATTACH_TYPE_CURSIVE)
!""             
!"$%&'()*+0123456789<=>?ABCDEILMNORSTVYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~
!buffer->have_output
!buffer->have_output && !source->have_output
!buffer->len
!count
!current
!current->next
!have_output || (out_info == info && out_len == idx)
!have_positions
!hb_object_is_immutable (buffer)
!obj->next
!obj->real_links.length
!obj->virtual_links.length
!st.path_open
"""""""""""""
"""""#"""""""""$"""""""""""""R
"""#""""""""""""""""""""""""""B
"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRS
"n,,\v\v\v\v\v/0\v
#""""!!!###\f
###########
#(#$$$G$G$F$$$^WUCCP,
#((((*(***.
$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$
$$$$$$$$F++++(
$$$$$$$,$$=,,,,,$$$$$$,,$$$$$,,,
$$$$$$$,+++++++++++Y+++U+WP,,,,$$$=$>$$F++P,P+9+++F,,,,$$$>=$$$$$$$$VVZ+YWW=,,,$FUk@,,,+^$$$$$$$$V++P,VU<
$$$$$$=$$==$>=$$$$$$))))))))u,,,,,,,>$$$$$$$$$$$$$
$$$$$E$$$$$$$$$$$$$$(,$$$,$$$,$$$,$=,
$$$$=$$,$$$==$$,=$$,$$$==$$,$$$$$$$=$$$$$$$$$=9+
$$$$N$$$$$FP,
$$$++K++++K+K++,
$$$F+++++V,,,,,]$FV++V+Vk
$$$V+$$+GVb^VVV$F+G$$$$$$UWUVVW^
$$%"&%""""""""
$$+,VW+++UWW<
$$=$$$$F++UWUWP,,,,$F$$$$U,
$$S$$$$$CCC\,,,,$$$$$$
$$VVVV++++V+,]
$$^U+++PUUW+++UVVW++++P9
$,,       F3
$G$$$$$$$$$H+++I2++JKL++$
%%%%%%%%%%%%%%
%%%&&&&&&&&&&
%%&%''%'''''#
'%%&%''%''''''')
'''''''''''''
'(&)&&&&&&&*+,-./012'3456&789&:;&<=>?<

'112223427116661
((((((((())(((((()))))))((*)))**))))))))++++++++  * ,-
((((((((3333333322222222222222
(((()       
(8Cz
(char *) obj <= this->head
(content_type == HB_BUFFER_CONTENT_TYPE_GLYPHS) || (!len && (content_type == HB_BUFFER_CONTENT_TYPE_INVALID))
(content_type == HB_BUFFER_CONTENT_TYPE_UNICODE) || (!len && (content_type == HB_BUFFER_CONTENT_TYPE_INVALID))
(size_t) (this->head - (char *) obj) <= size
(uintptr_t) pos % sizeof (scratch_buffer_t) == 0
))))))))))))))))
)))))))))))))))))))
))CCCC,,CCCCC\,7CCCCCC,,,,CCCCC,,7CCC\,,,CCCCCCC\7C\CCCCCCO,,,,,,,
),--)))))))))))))
),..)))))))))))))
),//)))))))))))))
***)))))))))))
************
*uuuuuuuu1uuuu*u
+$F@,,,,9U>$$$$>$>$$$$$$=$>$$,GVW++9UYW,=,,,,,,,B,,,>+++9V>$$$=>=$>$$,GWW+PYZYW,,,9U,,$>N
++)))))))))))))
++++++++++++
+++++X      (+$$$iiiii+
+++LC2++++++++LCCC2CCCCCCCL
+9.909+9090e09.e
+b$$$$$$^++V+W+$$$$U+VWW+V,,,,
,"ax":%d,"ay":%d
,"dx":%d,"dy":%d
,"w":%d,"h":%d
,"xb":%d,"yb":%d
,$$$$$$$$$$$,,,7$$$$$$
,$$$$,,,4@,,,,,,9$$$=,,,,$$$=$$$=
,$$>$$$$$>==>>$$$$=$$>>,,,=,>>>>$>==>>>>>>==>$=$$$=$$>$==$$$$$>$$>$>$$>$$
,$,,,,,,,,$=,,,,,,,,,,,++
,+++++++m+++++++P++b$$$$$$$U++UUVVUb$$$=
,,$$$$,,,,$$,,,,,]\v\v\v\v\v/\v\v\v/\v
,,$$$++P,,$$$$$$$]$$,,$$$$
,,$$=$$$$$$$$$$$=O]
,,,,+<++++++U+++G$F$$$G^+=,,
,,,,,,$$$$$=9WV++W++,,
,,,,,,,++++++
,,,,,,,,,,>==$$=$$$$>>$$$$F$++++G,$$=Q+++P
,,,,,,,CCCCCC,,7CCCCCCC
,,,,,,\v\v\v\v\v
,,,,,G>$$=,$=$$,>==$,>=,$=,$$$$$$,,VUZ,VZVW,=,,Y,,,,
,,,,V$$$$$$$$$VVVVVVVV+,,,,
,,,?,,,,,,,+++P+++W?
,,M$$$$$$$P$$$$$$++
,,Wb$$$$$$$$$$+++++++<
,,`$$$$$S++
,7CCCCii
,CCCCC7CCCC,,,,,,CCC,,,,,
,]$$$$$,,]$$$$,,
,]$$$=$$>=$$=
,e$$$$$$$$$$$$$MHf$$$$$$$$$$$$gh,$$$$$?
-!"#$13456./0()*7%&'89:+
-,,,,,,,,,,,,,
--)))))))))))))
--------------
-arevmda
-geok
-hak
-hbot
-hbsc
-lux
-navajo
-provenc
-syre
-syrj
-syrn
.............
../src/OT/Color/CBDT/../../../hb-sanitize.hh
../src/OT/Color/sbix/sbix.hh
../src/OT/Layout/GPOS/GPOS.hh
../src/OT/glyf/SimpleGlyph.hh
../src/OT/glyf/glyf.hh
../src/OT/name/../../hb-sanitize.hh
../src/OT/name/name.hh
../src/hb-bit-set.hh
../src/hb-buffer-serialize.cc
../src/hb-buffer-verify.cc
../src/hb-buffer.cc
../src/hb-buffer.hh
../src/hb-common.cc
../src/hb-draw.hh
../src/hb-font.cc
../src/hb-object.hh
../src/hb-open-type.hh
../src/hb-ot-layout.cc
../src/hb-ot-metrics.cc
../src/hb-ot-shaper-arabic.cc
../src/hb-sanitize.hh
../src/hb-serialize.hh
../src/hb-shape-plan.cc
../src/hb-string-array.hh
../src/hb-vector.hh
.notdef
.null
////////////////////
//////////////////////////////
///////////////////////6//////
//////////////////////6//////
//////////////\f///////////////
//////////////\f////////1//////
/////////////\f///////////////
///////////\n/\f///////////////
//////////2//\f///////////////
//////////2//\f////////3//////
//////////2//\f////////3//4///
//////////\t\n/\f///////////////
//////////\t\n\v\f///////////
//////////\t\n\v\f///////////////
//////////\t\n\v\f////////8//
//////////\t\n\v\f////////8//////
//////////\t\n\v\f////////9//
//////////\t\n\v\f////////\r//
////\t\n\v\f////////\r//
/77////////////7/
/QQQQQQQQQQQQQQ
/\v,/0/0\v/\v\v\v\v
0 == (Length & 3)
0 == (allocated_var_bits & bits)
0!0"6
0000
00000
0000000000000
000000000000000
000044444444444444
001.000
001.001
001.002
001.003
0123456789
0123456789.EE?-?
0123456789:;
01ss#
02ss#
09-909-90909-909,,-909,9+|\t|\t|\t|\t|\t|\t|\t|\t|\t|\t|\t|\t|\t|
09pj
0\v\v\v\v\v\v\v\v\v\v/4
0d,-jf
0ddd
0dddddgd,-jk
0dddddgd0ddm0d0d0ddd0dgdndlld
0dddddgdgdddlld
0dddddgdopqq
0dhdlld
0dlld
0dltd
10.1.0
10ss#
11111
1111111
1111111111
111111111111
11ss#
20ss#
21;u;uu
21\nuu
21\nuuUu
21ss#
21us
21uu
22222
233343Sv
23456)89:;
2DDDDDDDDDDeDDDDDDDDDDDGDDDDDDD
2trv
30ss#
31ss#
38pj
3m3m+++++P,,,,,,,C
40pj
40ss#
41ss#
44444
4555555555
456789
50ss#
51ss#
55555
55555555555555
56789++++++++++++++:;<+;,,,,$$$$$$$$$$$$$=,>$?@,,,,,AAA
56789:
5;;;;;;;;;;;;
5\f5\f5\f5\v8
60ss#
61ss#
66[[[[[[[[[[[[[[[
6777777777
7*47
7*7D
7/8b8|8
70ss#
71ss#
7777777777
7777777========
77=7*777@A7
77=789:?
77=79??
77=7LMNO\f\rPKK
7<77C<777
7@J7
7FGG
7HII
80ss#
81ss#
87pj
88888
8888888
888888887777
8?P9U>$$=,>=$>=$,PVWP,9P9+,9,,,>$==,,,
8\v8\v8
90ss#
91ss#
99999999
999999999999999999999
9:;<=>?@ABCDE
::666666666666
::::::::::::
:;;;;;;;;<<<<<<<<<<<<<<<<<<<<<<<<<
; sms
;$smn
;+T$S$$$$$$$$$$=,,,$$FG$$$$$$$$F=,,$$$,,,,,$$$$$$$=+UVWUV,,VUVVW+,,\,
;,,,,F++UW+$$$$$$$++++++U+
<%d,%d,%d,%d>
<777
<77777*7*777BA7
<77777*7*777BB7
<77777*7BB7
<77777*7EFGG
<7<77C<7<7<777<7*7D7BB7
<7@7BB7
<7BJ7
<<<<<<<<<<<<<
<<<<<<<<<<<<<<<
<=====>=================?
<\tBE=\vJKN
=,,,,$^V++++Ub$?
>$$$$$$$$$$,,>$(E$$$$$$$$$$$S
>333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
>>>>>>>>>>>>>
>>LLLLLLLL]]]]]]]]]]]]
>?L@ABCPRSTUMNOGHIVDEFWXYJKQ
?@ABCDEFG
?ACD\nG\fI
?void hb_vector_t<Type, sorted>::set_error() [with Type = hb_aat_map_builder_t::feature_info_t; bool sorted = true]
@$$$$F+,@$$$$$=,,$$$$R$$=A,,9++++$$$$S++++T+++++++U$$$$$$$$$$$UGVW+++UVWVF+++$$$$$+
@,$$$$$FWV+++W?,,,
@,,$$$$$=,9^VVVVVVVVVVVVVVVVVVV,,,9+J(((((((XP,,,,,V,,,,,,,,,,,,,,>((4(((4Q$=,,,,,,,=,,,,,,$=>,,,,,,,$$,,,,$$$$$,2<AA,,,,,,+++++++,+++P,,,,CCC\7CCCCC
@,,$$$$$^W+U+++WUWG
@,,,,$$$$,$$$^V++,+VVGHZ,,,,,F++++G$$$F++UF+<
@,,,,,?@,,,,,,AAAAAAAAG$$F+++++++,,,,,$$$$$$$++++++VW+++<,,,,,+++<
@@@@@@@@@@@
@@@ZZZZZZZZZZZZZZ
@AAAAAAAAA
AAAAA
AAAAAAAAAA
AAAAAAAAKKKKKKKKKKKKKK
AAAT+++L2+++CCCCCCC++CC+L,,,,,
AAT::Chain<AAT::ExtendedTypes>::apply(AAT::hb_aat_apply_context_t*, AAT::hb_aat_layout_chain_accelerator_t const*) const
AAT::Chain<AAT::ObsoleteTypes>::apply(AAT::hb_aat_apply_context_t*, AAT::hb_aat_layout_chain_accelerator_t const*) const
AAT::FeatureName::get_feature_type() const
AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::get_kerning(unsigned int, unsigned int, AAT::hb_aat_apply_context_t*) const
AAT::KerxTable<AAT::kerx>::create_accelerator_data(unsigned int) const
AAT::KerxTable<AAT::kerx>::sanitize(hb_sanitize_context_t*) const
AAT::LigatureSubtable<AAT::ExtendedTypes>::apply(AAT::hb_aat_apply_context_t*) const (.isra.0)
AAT::LigatureSubtable<AAT::ObsoleteTypes>::apply(AAT::hb_aat_apply_context_t*) const (.isra.0)
AAT::Lookup<OT::HBGlyphID16>::sanitize(hb_sanitize_context_t*) const
AAT::Lookup<OT::IntType<unsigned int, 4u>>::sanitize(hb_sanitize_context_t*) const
AAT::Lookup<OT::IntType<unsigned short, 2u>>::get_value(unsigned int, unsigned int) const
AAT::Lookup<OT::IntType<unsigned short, 2u>>::sanitize(hb_sanitize_context_t*) const
AAT::Lookup<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u>>, OT::IntType<unsigned short, 2u>, void, false>>::sanitize(hb_sanitize_context_t*, void const*) const
AAT::StateTable<AAT::ObsoleteTypes, AAT::ContextualSubtable<AAT::ObsoleteTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
AAT::StateTable<AAT::ObsoleteTypes, AAT::InsertionSubtable<AAT::ObsoleteTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
AAT::StateTable<AAT::ObsoleteTypes, void>::sanitize(hb_sanitize_context_t*, unsigned int*) const
AAT::SubtableGlyphCoverage::sanitize(hb_sanitize_context_t*, unsigned int) const
AAT::ankr::sanitize(hb_sanitize_context_t*) const
AAT::feat::sanitize(hb_sanitize_context_t*) const
AAT::hb_aat_apply_context_t::hb_aat_apply_context_t(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_blob_t*)
AAT::hb_aat_apply_context_t::set_ankr_table(AAT::ankr const*)
AAT::hb_aat_apply_context_t::~hb_aat_apply_context_t()
AAT::ltag::sanitize(hb_sanitize_context_t*) const
AAT::mortmorx<AAT::mort, AAT::ObsoleteTypes, 1836020340u>::sanitize(hb_sanitize_context_t*) const (.part.0)
AAT::mortmorx<AAT::morx, AAT::ExtendedTypes, 1836020344u>::accelerator_t::accelerator_t(hb_face_t*)
AAT::mortmorx<AAT::morx, AAT::ExtendedTypes, 1836020344u>::sanitize(hb_sanitize_context_t*) const
AAT::trak::sanitize(hb_sanitize_context_t*) const
AEsmall
Aacute
Aacutesmall
Acircumflex
Acircumflexsmall
Acutesmall
Adieresis
Adieresissmall
Agrave
Agravesmall
Aring
Aringsmall
Asmall
Atilde
Atildesmall
Ax",N
BBBBB
BBBBBBBBBBBB
BD\nZ
BHHHHHHHHHH
BUSGSOPG
Black
Bold
Book
Brevesmall
Bsmall
C uh
C1\v\vCCC
C4CYC
CCC,CCCCCCCC7CCCC \v """"\v  "
CCCC
CCCCCC
CCCCCCC
CCCCCCCC
CCCCCCCC,,,,,,]iiiiiii
CCCCCCCC,,,,7CCCCCCC\
CCCCCCCCC
CCCCCCCCCCC
CCCCCCCCCCCC
CCCCCCCCCCCC\,,
CDEFG
CFF::FDSelect3_4<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned char, 1u>>::sanitize(hb_sanitize_context_t*, unsigned int) const
CFF::cff1_top_dict_opset_t::process_op(unsigned int, CFF::cff1_top_dict_interp_env_t&, CFF::cff1_top_dict_values_t&)
CFF::cff2_cs_interp_env_t<CFF::number_t>::process_blend()
CFF::cs_interp_env_t<CFF::number_t, CFF::Subrs<OT::IntType<unsigned short, 2u>>>::call_subr(CFF::biased_subrs_t<CFF::Subrs<OT::IntType<unsigned short, 2u>>> const&, CFF::cs_type_t)
CFF::cs_interpreter_t<CFF::cff1_cs_interp_env_t, cff1_cs_opset_seac_t, get_seac_param_t>::interpret(get_seac_param_t&)
CFF::cs_opset_t<CFF::number_t, cff1_cs_opset_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t, cff1_path_procs_extents_t>::process_op(unsigned int, CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
CFF::cs_opset_t<CFF::number_t, cff1_cs_opset_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t, cff1_path_procs_path_t>::process_op(unsigned int, CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
CFF::cs_opset_t<CFF::number_t, cff2_cs_opset_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t, cff2_path_procs_extents_t>::process_op(unsigned int, CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
CFF::cs_opset_t<CFF::number_t, cff2_cs_opset_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t, cff2_path_procs_path_t>::process_op(unsigned int, CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
CFF::dict_interpreter_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>, CFF::interp_env_t<CFF::number_t>>::interpret(CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>&)
CFF::dict_opset_t::process_op(unsigned int, CFF::interp_env_t<CFF::number_t>&)
CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::flex(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::flex1(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hvcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vhcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::hvcurveto(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::rcurveline(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::vhcurveto(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::flex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::flex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::hvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::rcurveline(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::vhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
CSWTCH.230
C\CCCCCC\,\,,,,,,,CCCCCC2,
C\vDkD+E]EaEkE
Cacute
Caronsmall
Ccaron
Ccedilla
Ccedillasmall
Cedillasmall
Circumflexsmall
Csmall
DDDD
DDDDDD
DDDDDDDDDDDDDDD
DDDDDDDDDDDDFDDDDDDDDHIJKDDDDDDDDDDTUVDDDDDXYZ^DDDDHDFDDDDDDDDHIJKDDDDDDDDDDTUVDDDDDXYZ^DFDDDDDDDDDIJKDDDDDDDDDDDDDDDDDDXYZDFDDDDDDDDDDJKDDDDDDDDDDDDDDDDDDXYZDFDDDDDDDDDDDKDDDDDDDDDDDDDDDDDDXYZDFDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDXYDFDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDYDFDFDDDDDDDDDIJKDDDDDDDDDDTUVDDDDDXYZ^DFDDDDDDDDDIJKDDDDDDDDDDDUVDDDDDXYZ^DFDDDDDDDDDIJKDDDDDDDDDDDDVDDDDDXYZ^D`____________a_FDDDDDDDDDIJKDDDDDDDDDDDDDDDDDDXYZ^DFDDDDDDDGHIJKDDDDDDQRSDTUVDDDDDXYZ^DDDDHDFDDDDDDDDHIJKDDDDDDQRSDTUVDDDDDXYZ^DDDDHDFDDDDDDDDHIJKDDDDDDDRSDTUVDDDDDXYZ^DDDDHDFDDDDDDDDHIJKDDDDDDDDSDTUVDDDDDXYZ^DDDDHDbDFDDDDDDDGHIJKDMNDDDQRSDTUVDDDDDXYZ^DDDDHDFDDDDDDDDHIJKDDDDDDDDDDTUVDDDDDXYZ^DDDDHDbDFDDDDDDDGHIJKDDNDDDQRSDTUVDDDDDXYZ^DDDDHDbDFDDDDDDDGHIJKDDDDDDQRSDTUVDDDDDXYZ^DDDDHDbDFDDDDDDDGHIJKLMNDDDQRSDTUVDDDDDXYZ^DDDDHD
DDDDDDDDDDDDFDDDDDDDDHIJKDDDDDDDDDDTUVDDDDDXYZ^Ddcfge
DDDD\\\\\\\\\\\
DDDDmD
DDDDmDFDDDDDDDDmnopDDDDDDDDDDyz{DDDDD}~
DDDDmDFDDDDDDDDmnopDDDDDDDDxDyz{DDDDD}~
DDDDmDFDDDDDDDDmnopDDDDDDDwxDyz{DDDDD}~
DDDDmDFDDDDDDDDmnopDDDDDDvwxDyz{DDDDD}~
DDDDmDjkDFDDDDDDDlmnopqrstDuvwxDyz{DDDD|}~
DEFGH
DEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abc
DFDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD}~DFDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD~DFDFDDDDDDDDDnopDDDDDDDDDDyz{DDDDD}~
DFDDDDDDDDDDDpDDDDDDDDDDDDDDDDDD}~
DFDDDDDDDDDDopDDDDDDDDDDDDDDDDDD}~
DFDDDDDDDDDnopDDDDDDDDDDDDDDDDDD}~
DFDDDDDDDDDnopDDDDDDDDDDDD{DDDDD}~
DFDDDDDDDDDnopDDDDDDDDDDDz{DDDDD}~
DFDDDDDDDlmnopDDDDDDvwxDyz{DDDDD}~
DFDDDDDDDlmnopDDsDDDvwxDyz{DDDDD}~
DFDDDDDDDlmnopDrsDDDvwxDyz{DDDDD}~
DFDDDDDDDlmnopqrsDDDvwxDyz{DDDDD}~
Delta
Dieresissmall
DjDDDDDDDDDDDDFDDDDDDDDmnopDDDDDDDDDDyz{DDDDD}~
Djccccccccccccdcj____________a_jDDDDDDDDDDDDFDDDDDDDDmnopDDDDDDDDDDyz{DDDDD}~
DjkDFDDDDDDDlmnopqrstjuvwxDyz{DDDD|}~
Dotaccentsmall
Dsmall
E$$$$$?(E,,>$$$$$C
E$$MC^U$G+GFG$$+F=,,,,,,,,,,,>S
EDFDDDDDDDGHIJKLMNO
EDFDDDDDDDGHIJKLMNODPQRSDTUVDDDDWXYZ[DDDD\DD]D
EEEEEEEEEEEEEE
EJJJJJJJJJJJJ
Eacute
Eacutesmall
Ecircumflex
Ecircumflexsmall
Edieresis
Edieresissmall
Egrave
Egravesmall
Esmall
Ethsmall
F+9P,,++$$>$>$$$$$$,+P,9
FFFFF
FFFFFFF
FFFIIIIIIII
FGHI
FT_Add_Default_Modules
FT_Done_Face
FT_Done_Library
FT_Done_MM_Var
FT_Face_GetCharVariantIndex
FT_Get_Advance
FT_Get_Char_Index
FT_Get_Glyph_Name
FT_Get_Kerning
FT_Get_MM_Var
FT_Get_Name_Index
FT_Get_Var_Blend_Coordinates
FT_Load_Glyph
FT_Load_Sfnt_Table
FT_MulFix
FT_New_Face
FT_New_Library
FT_New_Memory_Face
FT_Outline_Decompose
FT_Outline_EmboldenXY
FT_Reference_Face
FT_Reference_Library
FT_Select_Charmap
FT_Set_Char_Size
FT_Set_Default_Properties
FT_Set_Transform
FT_Set_Var_Design_Coordinates
FT_Sfnt_Table_Info
Fsmall
GCC: (SteamRT 10.3.0-3+steamrt3.1+bsrt3.1) 10.3.0
GF,,,,,,,$$$==$$>$$$$$$$>$$$$?,,,$$$$$$$FVW+++P,,+V>$$$=>=$>$$9GVUVZYZYV,=,,Y,,>$$V,+++P,++P,,,,,$$$$$>,=$$$>VW++PZYYVZVUGG
GFG,,,,9VW+UW<
GGGGG
GGGGGGGGGGGGG
GHIJKL
GHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefg
GLIBC_2.14
GLIBC_2.2.5
GLIBC_2.3
Gbreve
Gravesmall
Gsmall
HB_OPTIONS
HB_SHAPER_LIST
HGIJAI
HIIIIIIIII
HIJKLMNOPQRSTUVWXYZ[\]^_`
Hbbbbbbbbaaaaaaaa
Hsmall
Hungarumlautsmall
I\n^^L\nZA`\n\
Iacute
Iacutesmall
Icircumflex
Icircumflexsmall
Idieresis
Idieresissmall
Idotaccent
Igrave
Igravesmall
InJvJ
Ismall
JJJJJ
Jsmall
KKKK
KLMN
Ksmall
LVM\rN&N2N8N9N=NAN
Light
Lslash
Lslashsmall
Lsmall
M>F7
MMMMMMMMMM
Macronsmall
Medium
Msmall
NNNNN
NNNNNNNSSSSSSSSSSSSSS
Nsmall
Ntilde
Ntildesmall
OEsmall
OF$$$$$$$+++++P>$$$$+++++G,,,,,,,
OOOOO
OOOOOOOO
OPQR
OT::Affine2x3::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u>>::sanitize_shallow(hb_sanitize_context_t*) const
OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u>>::serialize(hb_serialize_context_t*, unsigned int, bool)
OT::ArrayOf<OT::Index, OT::IntType<unsigned short, 2u>>::sanitize_shallow(hb_sanitize_context_t*) const
OT::ArrayOf<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned short, 2u>>::sanitize_shallow(hb_sanitize_context_t*) const
OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>>::serialize(hb_serialize_context_t*, unsigned int, bool)
OT::ArrayOf<OT::Layout::GPOS_impl::EntryExitRecord, OT::IntType<unsigned short, 2u>>::sanitize_shallow(hb_sanitize_context_t*) const
OT::BASE::sanitize(hb_sanitize_context_t*) const
OT::BaseCoord::get_coord(hb_font_t*, OT::ItemVariationStore const&, hb_direction_t) const
OT::BaseCoord::sanitize(hb_sanitize_context_t*) const
OT::BaseScript::sanitize(hb_sanitize_context_t*) const
OT::BinSearchHeader<LenType>& OT::BinSearchHeader<LenType>::operator=(unsigned int) [with LenType = OT::IntType<short unsigned int>]
OT::CBDT::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*, bool) const
OT::CBDT::accelerator_t::reference_png(hb_font_t*, unsigned int) const
OT::CBLC::sanitize(hb_sanitize_context_t*) const
OT::CFFIndex<OT::IntType<unsigned int, 4u>>::offset_at(unsigned int) const
OT::CFFIndex<OT::IntType<unsigned int, 4u>>::sanitize(hb_sanitize_context_t*) const
OT::CFFIndex<OT::IntType<unsigned short, 2u>>::offset_at(unsigned int) const
OT::CFFIndex<OT::IntType<unsigned short, 2u>>::operator[](unsigned int) const
OT::CFFIndex<OT::IntType<unsigned short, 2u>>::sanitize(hb_sanitize_context_t*) const
OT::COLR::paint_glyph(hb_font_t*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, bool) const
OT::COLR::sanitize(hb_sanitize_context_t*) const
OT::ChainContextFormat1_4<OT::Layout::SmallTypes>::closure(OT::hb_closure_context_t*) const
OT::ChainContextFormat2_5<OT::Layout::SmallTypes>::closure(OT::hb_closure_context_t*) const
OT::ChainContextFormat2_5<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
OT::ChainContextFormat3::apply(OT::hb_ot_apply_context_t*) const
OT::ChainContextFormat3::closure(OT::hb_closure_context_t*) const
OT::ChainContextFormat3::sanitize(hb_sanitize_context_t*) const
OT::ChainRule<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
OT::ChainRuleSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
OT::ClassDef::get_class(unsigned int) const
OT::ClassDef::intersects_class(hb_set_t const*, unsigned int) const
OT::ClassDef::sanitize(hb_sanitize_context_t*) const
OT::ClassDefFormat2_4<OT::Layout::SmallTypes>::intersected_class_glyphs(hb_set_t const*, unsigned int, hb_set_t*) const
OT::CmapSubtable::get_glyph(unsigned int, unsigned int*) const
OT::CmapSubtable::sanitize(hb_sanitize_context_t*) const
OT::CmapSubtableFormat4::accelerator_t::get_glyph_func(void const*, unsigned int, unsigned int*)
OT::ColorLine<OT::NoVariable>::static_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
OT::ColorLine<OT::NoVariable>::static_get_extend(hb_color_line_t*, void*, void*)
OT::ColorLine<OT::Variable>::static_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
OT::ColorLine<OT::Variable>::static_get_extend(hb_color_line_t*, void*, void*)
OT::Condition::sanitize(hb_sanitize_context_t*) const
OT::ContextFormat1_4<OT::Layout::SmallTypes>::closure(OT::hb_closure_context_t*) const
OT::ContextFormat2_5<OT::Layout::SmallTypes>::closure(OT::hb_closure_context_t*) const
OT::ContextFormat2_5<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
OT::ContextFormat3::apply(OT::hb_ot_apply_context_t*) const
OT::DataMap::get_tag() const
OT::DeltaSetIndexMap::map(unsigned int) const
OT::DeltaSetIndexMap::sanitize(hb_sanitize_context_t*) const
OT::Device::get_x_delta(hb_font_t*, OT::ItemVariationStore const&, float*) const
OT::Device::get_y_delta(hb_font_t*, OT::ItemVariationStore const&, float*) const
OT::Device::sanitize(hb_sanitize_context_t*) const
OT::Feature::sanitize(hb_sanitize_context_t*, OT::Record_sanitize_closure_t const*) const
OT::FeatureVariations::sanitize(hb_sanitize_context_t*) const
OT::GDEF::accelerator_t::accelerator_t(hb_face_t*)
OT::GDEF::get_glyph_props(unsigned int) const
OT::GDEF::is_blocklisted(hb_blob_t*, hb_face_t*) const
OT::GDEFVersion1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
OT::GSUBGPOS::find_script_index(unsigned int, unsigned int*) const
OT::GSUBGPOS::get_lookup(unsigned int) const (.part.0)
OT::HVARVVAR::sanitize(hb_sanitize_context_t*) const
OT::ItemVarStoreInstancer::operator()(unsigned int, unsigned short) const
OT::ItemVarStoreInstancer::operator()(unsigned int, unsigned short) const (.constprop.0)
OT::ItemVarStoreInstancer::operator()(unsigned int, unsigned short) const (.constprop.1)
OT::ItemVariationStore::get_delta(unsigned int, unsigned int, int const*, unsigned int, float*) const
OT::ItemVariationStore::sanitize(hb_sanitize_context_t*) const
OT::Layout::Common::Coverage::get_coverage(unsigned int) const
OT::Layout::Common::Coverage::get_population() const
OT::Layout::Common::Coverage::intersects(hb_set_t const*) const
OT::Layout::Common::Coverage::iter_t::__next__()
OT::Layout::Common::Coverage::iter_t::iter_t(OT::Layout::Common::Coverage const&)
OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>::cmp_range(void const*, void const*)
OT::Layout::GPOS::is_blocklisted(hb_blob_t*, hb_face_t*) const
OT::Layout::GPOS_impl::Anchor::get_anchor(OT::hb_ot_apply_context_t*, unsigned int, float*, float*) const
OT::Layout::GPOS_impl::Anchor::sanitize(hb_sanitize_context_t*) const
OT::Layout::GPOS_impl::AnchorMatrix::sanitize(hb_sanitize_context_t*, unsigned int) const
OT::Layout::GPOS_impl::CursivePosFormat1::apply(OT::hb_ot_apply_context_t*) const
OT::Layout::GPOS_impl::MarkArray::apply(OT::hb_ot_apply_context_t*, unsigned int, unsigned int, OT::Layout::GPOS_impl::AnchorMatrix const&, unsigned int, unsigned int) const
OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
OT::Layout::GPOS_impl::SinglePosFormat1::position_single(hb_font_t*, hb_blob_t*, hb_direction_t, unsigned int, hb_glyph_position_t&) const (.part.0)
OT::Layout::GPOS_impl::SinglePosFormat2::position_single(hb_font_t*, hb_blob_t*, hb_direction_t, unsigned int, hb_glyph_position_t&) const
OT::Layout::GPOS_impl::ValueFormat::apply_value(OT::hb_ot_apply_context_t*, OT::Layout::GPOS_impl::ValueBase const*, OT::IntType<unsigned short, 2u> const*, hb_glyph_position_t&) const
OT::Layout::GPOS_impl::ValueFormat::get_device(OT::IntType<unsigned short, 2u> const*, bool*, OT::Layout::GPOS_impl::ValueBase const*, hb_sanitize_context_t&)
OT::Layout::GPOS_impl::ValueFormat::sanitize_value_devices(hb_sanitize_context_t*, OT::Layout::GPOS_impl::ValueBase const*, OT::IntType<unsigned short, 2u> const*) const
OT::Layout::GPOS_impl::reverse_cursive_minor_offset(hb_glyph_position_t*, unsigned int, hb_direction_t, unsigned int)
OT::Layout::GSUB::is_blocklisted(hb_blob_t*, hb_face_t*) const
OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes>::closure(OT::hb_closure_context_t*) const
OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes>::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>::closure(OT::hb_closure_context_t*) const
OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>::serialize(hb_serialize_context_t*, hb_sorted_array_t<OT::HBGlyphID16 const>, hb_array_t<unsigned int const>, hb_array_t<OT::HBGlyphID16 const>, hb_array_t<unsigned int const>, hb_array_t<OT::HBGlyphID16 const>) (.isra.0)
OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes>::closure(OT::hb_closure_context_t*) const
OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes>::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1::apply(OT::hb_ot_apply_context_t*) const
OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1::closure(OT::hb_closure_context_t*) const
OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1::sanitize(hb_sanitize_context_t*) const
OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1::would_apply(OT::hb_would_apply_context_t*) const (.part.0) (.isra.0)
OT::Layout::GSUB_impl::Sequence<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes>::closure(OT::hb_closure_context_t*) const
OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes>::closure(OT::hb_closure_context_t*) const
OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_3_set_t [1]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_3_set_t const (&) [1], unsigned int) (.constprop.0)
OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_mark_set_t [1]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_mark_set_t const (&) [1], unsigned int) (.constprop.0)
OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_set_t [18]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_set_t const (&) [18], unsigned int) (.constprop.0)
OT::Layout::GSUB_impl::SubstLookup::dispatch_closure_recurse_func(OT::hb_closure_context_t*, unsigned int, hb_set_t*, unsigned int, unsigned int)
OT::Layout::propagate_attachment_offsets(hb_glyph_position_t*, unsigned int, unsigned int, hb_direction_t, unsigned int)
OT::LigCaretList::sanitize(hb_sanitize_context_t*) const
OT::Lookup::serialize(hb_serialize_context_t*, unsigned int, unsigned int, unsigned int)
OT::MVAR::get_var(unsigned int, int const*, unsigned int) const
OT::MVAR::sanitize(hb_sanitize_context_t*) const
OT::MarkGlyphSets::sanitize(hb_sanitize_context_t*) const
OT::MathGlyphInfo::sanitize(hb_sanitize_context_t*) const
OT::MathValueRecord::get_x_value(hb_font_t*, void const*) const
OT::MathValueRecord::get_y_value(hb_font_t*, void const*) const
OT::MathVariants::sanitize(hb_sanitize_context_t*) const
OT::MinMax::sanitize(hb_sanitize_context_t*) const
OT::OpenTypeFontFile::sanitize(hb_sanitize_context_t*) const
OT::PaintColrGlyph::paint_glyph(OT::hb_paint_context_t*) const
OT::PaintRotate::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
OT::PaintRotate::sanitize(hb_sanitize_context_t*) const
OT::PaintRotateAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
OT::PaintRotateAroundCenter::sanitize(hb_sanitize_context_t*) const
OT::PaintScale::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
OT::PaintScale::sanitize(hb_sanitize_context_t*) const
OT::PaintScaleAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
OT::PaintScaleAroundCenter::sanitize(hb_sanitize_context_t*) const
OT::PaintScaleUniform::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
OT::PaintScaleUniform::sanitize(hb_sanitize_context_t*) const
OT::PaintScaleUniformAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
OT::PaintScaleUniformAroundCenter::sanitize(hb_sanitize_context_t*) const
OT::PaintSkew::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
OT::PaintSkew::sanitize(hb_sanitize_context_t*) const
OT::PaintSkewAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
OT::PaintSkewAroundCenter::sanitize(hb_sanitize_context_t*) const
OT::PaintSolid::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
OT::PaintTranslate::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
OT::PaintTranslate::sanitize(hb_sanitize_context_t*) const
OT::Rule<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ContextApplyLookupContext const&) const
OT::RuleSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ContextApplyLookupContext const&) const
OT::TableRecord::cmp(void const*, void const*)
OT::_hb_ot_name_entry_cmp(void const*, void const*)
OT::apply_lookup(OT::hb_ot_apply_context_t*, unsigned int, unsigned int*, unsigned int, OT::LookupRecord const*, unsigned int)
OT::avar::map_coords(int*, unsigned int) const
OT::cff1::accelerator_subset_t::get_seac_components(unsigned int, unsigned int*, unsigned int*) const
OT::cff1::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
OT::cff1::accelerator_t::get_glyph_from_name(char const*, int, unsigned int*) const
OT::cff1::accelerator_t::get_path(hb_font_t*, unsigned int, hb_draw_session_t&) const
OT::cff1::accelerator_t::gname_t::cmp(void const*, void const*)
OT::cff1::accelerator_t::paint_glyph(hb_font_t*, unsigned int, hb_paint_funcs_t*, void*, unsigned int) const
OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>>::accelerator_templ_t(hb_face_t*)
OT::cff1::lookup_expert_charset_for_glyph(unsigned int)
OT::cff1::lookup_expert_charset_for_sid(unsigned int)
OT::cff1::lookup_expert_encoding_for_code(unsigned int)
OT::cff1::lookup_expert_subset_charset_for_glyph(unsigned int)
OT::cff1::lookup_expert_subset_charset_for_sid(unsigned int)
OT::cff1::lookup_standard_encoding_for_code(unsigned int)
OT::cff1::lookup_standard_encoding_for_sid(unsigned int)
OT::cff2::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
OT::cff2::accelerator_t::get_path(hb_font_t*, unsigned int, hb_draw_session_t&) const
OT::cff2::accelerator_t::get_path_at(hb_font_t*, unsigned int, hb_draw_session_t&, hb_array_t<int const>) const
OT::cff2::accelerator_t::paint_glyph(hb_font_t*, unsigned int, hb_paint_funcs_t*, void*, unsigned int) const
OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t>>::accelerator_templ_t(hb_face_t*)
OT::cmap::accelerator_t::accelerator_t(hb_face_t*)
OT::cmap::find_subtable(unsigned int, unsigned int) const
OT::collect_class(hb_set_t*, unsigned int, void const*)
OT::collect_coverage(hb_set_t*, unsigned int, void const*)
OT::collect_glyph(hb_set_t*, unsigned int, void const*)
OT::glyf_accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
OT::glyf_accelerator_t::glyf_accelerator_t(hb_face_t*)
OT::glyf_accelerator_t::glyph_for_gid(unsigned int, bool) const
OT::glyf_impl::SimpleGlyph::get_contour_points(contour_point_vector_t&, bool) const
OT::gvar::accelerator_t::accelerator_t(hb_face_t*)
OT::gvar::accelerator_t::apply_deltas_to_points(unsigned int, hb_array_t<int const>, hb_array_t<contour_point_t>, bool) const (.isra.0)
OT::gvar::sanitize_shallow(hb_sanitize_context_t*) const
OT::hb_accelerate_subtables_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*, unsigned int) const (.isra.0)
OT::hb_accelerate_subtables_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*, unsigned int) const (.isra.0)
OT::hb_closure_context_t::flush()
OT::hb_closure_context_t::is_lookup_done(unsigned int)
OT::hb_closure_context_t::pop_cur_done_glyphs() (.part.0) (.isra.0)
OT::hb_closure_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*, unsigned int) const (.isra.0)
OT::hb_collect_glyphs_context_t::return_t OT::ChainContext::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) const (.isra.0)
OT::hb_collect_glyphs_context_t::return_t OT::Context::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) const (.isra.0)
OT::hb_collect_glyphs_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*, unsigned int) const (.isra.0)
OT::hb_collect_glyphs_context_t::return_t OT::Layout::GSUB_impl::SubstLookup::dispatch_recurse_func<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*, unsigned int)
OT::hb_collect_glyphs_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*, unsigned int) const (.isra.0)
OT::hb_have_non_1to1_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_have_non_1to1_context_t>(OT::hb_have_non_1to1_context_t*, unsigned int) const (.isra.0)
OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<OT::KernAATSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<OT::KernOTSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<OT::KernAATSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<OT::KernOTSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
OT::hb_kern_machine_t<AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
OT::hb_kern_machine_t<OT::KernSubTableFormat3<OT::KernAATSubTableHeader>>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
OT::hb_kern_machine_t<OT::KernSubTableFormat3<OT::KernOTSubTableHeader>>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
OT::hb_kern_machine_t<hb_ot_shape_fallback_kern_driver_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
OT::hb_ot_apply_context_t::_set_glyph_class(unsigned int, unsigned int, bool, bool)
OT::hb_ot_apply_context_t::hb_ot_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*, hb_blob_t*)
OT::hb_ot_apply_context_t::init_iters()
OT::hb_ot_apply_context_t::match_properties_mark(unsigned int, unsigned int, unsigned int) const
OT::hb_ot_apply_context_t::replace_glyph(unsigned int)
OT::hb_ot_apply_context_t::return_t OT::Layout::GPOS_impl::PosLookup::dispatch_recurse_func<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int)
OT::hb_ot_apply_context_t::return_t OT::Layout::GSUB_impl::SubstLookup::dispatch_recurse_func<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int)
OT::hb_paint_context_t::recurse(OT::Paint const&)
OT::hb_would_apply_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*, unsigned int) const
OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::accelerator_t(hb_face_t*)
OT::hmtxvmtx<OT::vmtx, OT::vhea, OT::VVAR>::accelerator_t::accelerator_t(hb_face_t*)
OT::intersected_class_glyphs(hb_set_t const*, void const*, unsigned int, hb_set_t*, void*)
OT::intersected_coverage_glyphs(hb_set_t const*, void const*, unsigned int, hb_set_t*, void*)
OT::intersected_glyph(hb_set_t const*, void const*, unsigned int, hb_set_t*, void*)
OT::intersects_class(hb_set_t const*, unsigned int, void const*, void*)
OT::intersects_coverage(hb_set_t const*, unsigned int, void const*, void*)
OT::intersects_glyph(hb_set_t const*, unsigned int, void const*, void*)
OT::kern::accelerator_t::accelerator_t(hb_face_t*)
OT::match_always(hb_glyph_info_t&, unsigned int, void const*)
OT::match_class(hb_glyph_info_t&, unsigned int, void const*)
OT::match_class_cached(hb_glyph_info_t&, unsigned int, void const*)
OT::match_class_cached1(hb_glyph_info_t&, unsigned int, void const*)
OT::match_class_cached2(hb_glyph_info_t&, unsigned int, void const*)
OT::match_coverage(hb_glyph_info_t&, unsigned int, void const*)
OT::match_glyph(hb_glyph_info_t&, unsigned int, void const*)
OT::name::accelerator_t::accelerator_t(hb_face_t*)
OT::post::accelerator_t::accelerator_t(hb_face_t*)
OT::post::accelerator_t::cmp_gids(void const*, void const*, void*)
OT::sbix::accelerator_t::get_png_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*, bool) const
OT::sbix::sanitize(hb_sanitize_context_t*) const
OT::unicode_to_macroman(unsigned int)::mapping
Oacute
Oacutesmall
Ocircumflex
Ocircumflexsmall
Odieresis
Odieresissmall
Ogoneksmall
Ograve
Ogravesmall
Omega
Oslash
Oslashsmall
Osmall
Otilde
Otildesmall
P+PzP
P,,,,>$$=>$$=>$$=,,,,
P,,,,O,+G$$$$$$$$$F++W+++P
P00L\v\v\vi.(\vjJ
P@QEQMQTQdQgQhQiQmQwQ
PKKKKKTKPKK\PKPKPKKKPKTK]K[[K
PKKKKKTKTKKK[[K
PKKKKKTKWMXY\f\rPKK
PKKKKKTK^_``\f\rPKKK\fK_``\f\rPKKK\fK``\f\rPKKK\fKPKK\PKKK\fKabb\f\rPKKK\fKUcK
PKUK[[K
PKWMSS\f\rPKKK\fKKQKWMXS\f\rPKK
PK[[K
PK[cK
PPPPPPPPPPPPPP
PQRSDTUVDDDDWXYZ[DDDD\DD]D
Psmall
Q3QIR
QQQQQQQQ
QRRRRRRRRR
Qsmall
Qxxxxxxxxttttttttttttttt
R)R:R;RFRrRwR
RRRRRRRRRRR
RSTUVW
Regular
Ringsmall
Roman
Rsmall
Rttttttttttttt
S?SISQSZSsSuS}S
Scaron
Scaronsmall
Scedilla
Semibold
Ssmall
T8TBTHThT
TSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSUSVVVVV
TTTTTTTTTTTTTT
TVUUUUU
Thorn
Thornsmall
Tildesmall
Tsmall
Type* hb_object_reference(Type*) [with Type = hb_blob_t]
Type* hb_object_reference(Type*) [with Type = hb_buffer_t]
Type* hb_object_reference(Type*) [with Type = hb_draw_funcs_t]
Type* hb_object_reference(Type*) [with Type = hb_face_t]
Type* hb_object_reference(Type*) [with Type = hb_font_funcs_t]
Type* hb_object_reference(Type*) [with Type = hb_font_t]
Type* hb_object_reference(Type*) [with Type = hb_map_t]
Type* hb_object_reference(Type*) [with Type = hb_paint_funcs_t]
Type* hb_object_reference(Type*) [with Type = hb_set_t]
Type* hb_object_reference(Type*) [with Type = hb_shape_plan_t]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::ArrayOf<OT::HBGlyphID16, OT::IntType<short unsigned int> >; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<short unsigned int> >; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::ArrayOf<OT::Offset<OT::IntType<short unsigned int> >, OT::IntType<short unsigned int> >; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<short unsigned int>, void, true>, OT::IntType<short unsigned int> >; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<short unsigned int>, void, true>, OT::IntType<short unsigned int> >; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::ArrayOf<OT::TableRecord, OT::BinSearchHeader<OT::IntType<short unsigned int> > >; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::HeadlessArrayOf<OT::HBGlyphID16, OT::IntType<short unsigned int> >; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::IntType<short unsigned int>; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::Layout::Common::Coverage; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes>; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes>; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes>; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::Lookup; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::OpenTypeFontFile; size_t = long unsigned int]
Type* hb_serialize_context_t::extend_size(Type*, size_t, bool) [with Type = OT::OpenTypeOffsetTable; size_t = long unsigned int]
Type* hb_serialize_context_t::start_serialize() [with Type = OT::Layout::GSUB_impl::SubstLookup]
Type* hb_serialize_context_t::start_serialize() [with Type = OT::OpenTypeFontFile]
U+%04X
USUUUcU
UUUUUUUUVUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUW
UVWXYZ
Uacute
Uacutesmall
Ucircumflex
Ucircumflexsmall
Udieresis
Udieresissmall
Ugrave
Ugravesmall
Usmall
V$$$$>$$$$$$$$$=,9++++++U++<+$$F+++++9+++++++++PCCCCLCC\C
VARC.cc
VQVhVtV
VVVVVVVVMMMMMMMMMMMM
VWC\v\v\v0,,0,
VXZ[
Vsmall
WWWWWW
W\rX1X2X@XZX^X
Wsmall
X$$$$$$$FV>$$$=>=>$$$$$$$$$$=$$$==,$$,GVW+PYZYW=,,,Y,,$>$+,
XXXXXXXXuuuuuuuuppppppppppppppp
Xsmall
Y"YDYHYQYTYbYsY
YYYYY
Yacute
Yacutesmall
Ydieresis
Ydieresissmall
Ysmall
Z'ZbZfZ
ZZZZZZZ
Zcaron
Zcaronsmall
Zsmall
[$$$9V>$$$$$$$$=,$$$$>$$$$>,$$$=,P,YV+PPVVVV,V@,,,,,>$$$$$$$F$+++P,`$$$K+++<
[CC8\,,UVG$$$=$=$$$$$$$$$$$$,G+UVZ+P++,,,9P$=>,,,,]
[CCC8
[CCCCCCCC
[CCCCCCCC,,,,CCCCCC\,,,,,,CCCC\,,,C,,,,,,,CCCCC
[FVH$$$=$$$>$$,GWVVZUZV+,,,YZ,,>=>^,,,,,,+V$$$$=$$$$$$FGVW+PVZVWM,,$^
\"\?\`\b\d\e\n\
\,,,,OAC,$$$$$$>$$$$$$=$>
\\\\\WWWWWWWWWWWWWWW
\]^_`abcdef
\f0fr
\f4fr
\f8fr
\fKKQKRMSO\f\rPKKK\fKKQKMSO\f\rPKKK\fKKQKTKKKUVK
\fKKQKZMSS\f\rPKKK\fKKQKMSS\f\rPKKK\fKKQKTKKK[VK
\fKKQK\n\v\v\f\rKKKK\fKLMSO\f\rPKKK\fKKQKe-ff
\f\f\f\f\f\f\f\f\f\f\f\f\f\f
\fzh-hk
\n,,).\v//\v"\v\v\v\v\v\v\v\v0\v\v\v\v
\n0es
\n4es
\n8es
\nDes
\nHes
\nLes
\nPes
\nTes
\n\n\n\n\n\n\n\n\n\n\n\n\n\n
\n\v\v\f\r\t\t\t\t\f\t
\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r
\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r<\r\r\r=>\r\r\r\r?\r\r\r\r\r\r@A
\t0en
\t4en
\tDen
\tHen
\t\n\v\v\v\v\v\v\v\v\v\v\v\v\f\r
\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r
\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r\t\r
\t\t\t\t\f\t\v\v\f\r\t\t\t\t\f\t\f\t
\t\t\t\t\n\t\v\f\r\t\t\t
\t\t\t\t\t\t\t77777777777777
\t\t\t\t\t\t\t\t\t\t\t\t
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t
\tu+f0f09\t|\t|\t|\t|
\t{\t"auxy""\t:\t909\t}\t}\t]\t}""\t:\t909\t}\t}ll""\t:\t9\t}\t}xy""\t:\t909\t}\t}""\t:\t909\t}\t}ll""\t:\t9\t}\t}""\t:\t9"\\t}"\\t}\t}""\t:\t9\t}\t{
\v" ""\v     
\v+-./23/01\n
\v.ttt\vtt
\v0\v/0\v\v\v/\v\v\v/
\v0\v/\v\v//,\v\v\v/
\v356277
\v\v\f\r\t\t\t\t\f\t\n\v\v\f\r\t\t\t
\v\v\v\v\v\v\v\v\v\v\v
\v\v\v\v\v\v\v\v\v\v\v\v
\v\v\v\v\v\v\v\v\v\v\v\v\v
\v\v\v\v\v\v\v\v\v\v\v\v\v\v
\v\vquvvvvvwAAxxx
]@,,,9P,,,,,,$$^V++++V+UG$?
]C]P]k]n]|]
]GVW++UUVWU+$H,,,,$$$$$$$^V++,VV+W<
]]]]FFFFFFFF
^UUUUUUUUUUU
^^^^^^^^^^^^^^
_"_S_b_i_k_
_1vr
_DYNAMIC
_GLOBAL_OFFSET_TABLE_
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__FRAME_END__
__GNU_EH_FRAME_HDR
__TMC_END__
____________
____________a_
____________a_FDDDDDDDDDnopDDDDDDDDDDDDDDDDDD}~
__assert_fail
__assert_fail@GLIBC_2.2.5
__cxa_atexit
__cxa_atexit@GLIBC_2.2.5
__cxa_finalize
__cxa_finalize@GLIBC_2.2.5
__do_global_dtors_aux
__do_global_dtors_aux_fini_array_entry
__dso_handle
__errno_location
__errno_location@GLIBC_2.2.5
__frame_dummy_init_array_entry
__fxstat64
__fxstat64@GLIBC_2.2.5
__gmon_start__
__popcountdi2
_deserialize_json_index_offsets
_deserialize_json_indicies
_deserialize_json_key_spans
_deserialize_json_trans_actions
_deserialize_json_trans_keys
_deserialize_json_trans_targs
_deserialize_text_glyphs_eof_actions
_deserialize_text_glyphs_index_offsets
_deserialize_text_glyphs_indicies
_deserialize_text_glyphs_key_spans
_deserialize_text_glyphs_trans_actions
_deserialize_text_glyphs_trans_keys
_deserialize_text_glyphs_trans_targs
_deserialize_text_unicode_eof_actions
_deserialize_text_unicode_index_offsets
_deserialize_text_unicode_indicies
_deserialize_text_unicode_key_spans
_deserialize_text_unicode_trans_actions
_deserialize_text_unicode_trans_keys
_deserialize_text_unicode_trans_targs
_double_parser_index_offsets
_double_parser_indicies
_double_parser_key_spans
_double_parser_trans_actions
_double_parser_trans_keys
_double_parser_trans_targs
_fini
_get_bounds(OT::cff1::accelerator_t const*, unsigned int, bounds_t&, bool)
_get_path(OT::cff1::accelerator_t const*, hb_font_t*, unsigned int, hb_draw_session_t&, bool, CFF::point_t*)
_glyf_get_advance_with_var_unscaled(hb_font_t*, unsigned int, bool)
_glyf_get_leading_bearing_with_var_unscaled(hb_font_t*, unsigned int, bool, int*)
_glyf_get_leading_bearing_without_var_unscaled(hb_face_t*, unsigned int, bool, int*)
_hb_CrapPool
_hb_NullPool
_hb_Null_AAT_Lookup
_hb_Null_AAT_SettingName
_hb_Null_OT_ClipRecord
_hb_Null_OT_CmapSubtableLongGroup
_hb_Null_OT_Index
_hb_Null_OT_LangSys
_hb_Null_OT_RangeRecord
_hb_Null_OT_VarIdx
_hb_Null_hb_buffer_t
_hb_Null_hb_draw_funcs_t
_hb_Null_hb_face_t
_hb_Null_hb_font_funcs_t
_hb_Null_hb_font_t
_hb_Null_hb_paint_funcs_t
_hb_Null_hb_unicode_funcs_t
_hb_all_shapers
_hb_arabic_u16
_hb_arabic_u8
_hb_blob_destroy(void*)
_hb_buffer_deserialize_json(hb_buffer_t*, char const*, unsigned int, char const**, hb_font_t*)
_hb_buffer_serialize_formats
_hb_buffer_serialize_glyphs_json(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_font_t*, hb_buffer_serialize_flags_t)
_hb_buffer_serialize_glyphs_text(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_font_t*, hb_buffer_serialize_flags_t)
_hb_buffer_serialize_unicode_json(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_flags_t)
_hb_buffer_serialize_unicode_text(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_flags_t)
_hb_clear_substitution_flags(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
_hb_draw_funcs_default
_hb_emoji_u8
_hb_face_builder_data_destroy(void*)
_hb_face_builder_data_reference_blob(hb_face_builder_data_t*)
_hb_face_builder_get_table_tags(hb_face_t const*, unsigned int, unsigned int*, unsigned int*, void*)
_hb_face_builder_get_table_tags(hb_face_t const*, unsigned int, unsigned int*, unsigned int*, void*)::'lambda'(void const*, void const*)::_FUN(void const*, void const*)
_hb_face_builder_reference_table(hb_face_t*, unsigned int, void*)
_hb_face_for_data_closure_destroy(void*)
_hb_face_for_data_get_table_tags(hb_face_t const*, unsigned int, unsigned int*, unsigned int*, void*)
_hb_face_for_data_reference_table(hb_face_t*, unsigned int, void*)
_hb_fallback_shape
_hb_fallback_shaper_face_data_create
_hb_fallback_shaper_face_data_destroy
_hb_fallback_shaper_font_data_create
_hb_fallback_shaper_font_data_destroy
_hb_font_create(hb_face_t*)
_hb_font_funcs_default
_hb_ft_alloc(FT_MemoryRec_*, long)
_hb_ft_conic_to(FT_Vector_ const*, FT_Vector_ const*, void*)
_hb_ft_cubic_to(FT_Vector_ const*, FT_Vector_ const*, FT_Vector_ const*, void*)
_hb_ft_face_destroy(void*)
_hb_ft_font_destroy(void*)
_hb_ft_font_set_funcs(hb_font_t*, FT_FaceRec_*, bool)
_hb_ft_free(FT_MemoryRec_*, void*)
_hb_ft_get_table_tags(hb_face_t const*, unsigned int, unsigned int*, unsigned int*, void*)
_hb_ft_hb_font_changed(hb_font_t*, FT_FaceRec_*)
_hb_ft_line_to(FT_Vector_ const*, void*)
_hb_ft_move_to(FT_Vector_ const*, void*)
_hb_ft_realloc(FT_MemoryRec_*, long, long, void*)
_hb_ft_reference_table(hb_face_t*, unsigned int, void*)
_hb_g_bytes_unref(void*)
_hb_glyph_info_is_default_ignorable(hb_glyph_info_t const*)
_hb_mac_language_map
_hb_mapped_file_destroy(void*)
_hb_modified_combining_class
_hb_ms_language_map
_hb_options
_hb_options_init()
_hb_ot_font_destroy(void*)
_hb_ot_metrics_get_position_common(hb_font_t*, hb_ot_metrics_tag_t, int*)
_hb_ot_name_language_for_mac_code(unsigned int)
_hb_ot_name_language_for_ms_code(unsigned int)
_hb_ot_shape
_hb_ot_shape_fallback_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
_hb_ot_shape_fallback_mark_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, bool)
_hb_ot_shape_fallback_mark_position_recategorize_marks(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
_hb_ot_shape_fallback_spaces(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
_hb_ot_shape_normalize(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
_hb_ot_shaper_arabic
_hb_ot_shaper_default
_hb_ot_shaper_dumber
_hb_ot_shaper_face_data_create
_hb_ot_shaper_face_data_destroy
_hb_ot_shaper_font_data_create
_hb_ot_shaper_font_data_destroy
_hb_ot_shaper_hangul
_hb_ot_shaper_hebrew
_hb_ot_shaper_indic
_hb_ot_shaper_khmer
_hb_ot_shaper_myanmar
_hb_ot_shaper_myanmar_zawgyi
_hb_ot_shaper_thai
_hb_ot_shaper_use
_hb_preprocess_text_vowel_constraints(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
_hb_shapers_get()
_hb_ucd_dm1_p0_map
_hb_ucd_dm1_p2_map
_hb_ucd_dm2_u32_map
_hb_ucd_dm2_u64_map
_hb_ucd_i16
_hb_ucd_sc_map
_hb_ucd_u16
_hb_ucd_u8
_hb_unicode_is_emoji_Extended_Pictographic(unsigned int)
_indic_syllable_machine_eof_trans
_indic_syllable_machine_from_state_actions
_indic_syllable_machine_index_offsets
_indic_syllable_machine_indicies
_indic_syllable_machine_key_spans
_indic_syllable_machine_to_state_actions
_indic_syllable_machine_trans_actions
_indic_syllable_machine_trans_keys
_indic_syllable_machine_trans_targs
_init
_khmer_syllable_machine_eof_trans
_khmer_syllable_machine_from_state_actions
_khmer_syllable_machine_index_offsets
_khmer_syllable_machine_indicies
_khmer_syllable_machine_key_spans
_khmer_syllable_machine_to_state_actions
_khmer_syllable_machine_trans_actions
_khmer_syllable_machine_trans_keys
_khmer_syllable_machine_trans_targs
_myanmar_syllable_machine_eof_trans
_myanmar_syllable_machine_from_state_actions
_myanmar_syllable_machine_index_offsets
_myanmar_syllable_machine_indicies
_myanmar_syllable_machine_key_spans
_myanmar_syllable_machine_to_state_actions
_myanmar_syllable_machine_trans_actions
_myanmar_syllable_machine_trans_keys
_myanmar_syllable_machine_trans_targs
_output_dotted_circle(hb_buffer_t*)
_release_blob(void*)
_use_syllable_machine_eof_trans
_use_syllable_machine_from_state_actions
_use_syllable_machine_index_offsets
_use_syllable_machine_indicies
_use_syllable_machine_key_spans
_use_syllable_machine_trans_actions
_use_syllable_machine_trans_keys
_use_syllable_machine_trans_targs
`````````````
``ooooooooooooooo
`abc
`abcdefghijklmn
a(bGb
a-latg
aCCCC2++++CCCC
aDaHaLaNa`ahaza
aaC+CCC
aaaa
aaaaaa9999
aaaaaaaaaa
aacute
abcddddddddde
abcdefghijklmnopqrstuvwxyz
acircumflex
acute
adieresis
adnK
agil
agrave
ak-hans
ak-hant
ak-hant-hk
ak-hant-mo
allocated >= 0
ampersand
ampersandsmall
an-hans
an-hant
an-hant-hk
an-hant-mo
ankh"
ankp
ankv"
apple
apply_forward(OT::hb_ot_apply_context_t*, OT::hb_ot_layout_lookup_accelerator_t const&, unsigned int) (.isra.0)
approxequal
arabic_fallback_features
arabic_fallback_plan_shape(arabic_fallback_plan_t*, hb_font_t*, hb_buffer_t*)
arabic_fallback_shape(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
arabic_fallback_synthesize_lookup_single(hb_ot_shape_plan_t const*, hb_font_t*, unsigned int) (.constprop.0)
arabic_features
arabic_state_table
aring
asciicircum
asciitilde
asterisk
asuperior
atanf
atanf@GLIBC_2.2.5
atexit
atilde
attached mark glyph at %u to glyph at %u
attaching mark glyph at %u to glyph at %u
aveD
ayrO
b.b4b]b
b:Qcd
b=cPchc{c
backslash
bits == (allocated_var_bits & bits)
bool OT::Condition::evaluate<OT::ItemVarStoreInstancer>(int const*, unsigned int, OT::ItemVarStoreInstancer*) const
bool OT::GSUBGPOSVersion1_2<OT::Layout::SmallTypes>::sanitize<OT::Layout::GPOS_impl::PosLookup>(hb_sanitize_context_t*) const
bool OT::GSUBGPOSVersion1_2<OT::Layout::SmallTypes>::sanitize<OT::Layout::GSUB_impl::SubstLookup>(hb_sanitize_context_t*) const
bool OT::Layout::Common::Coverage::collect_coverage<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>>(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>*) const (.isra.0)
bool OT::Layout::Common::Coverage::collect_coverage<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>>(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>*) const (.isra.0) (.cold)
bool OT::Layout::Common::Coverage::collect_coverage<hb_set_t>(hb_set_t*) const
bool OT::Lookup::sanitize<OT::Layout::GPOS_impl::PosLookupSubTable>(hb_sanitize_context_t*) const
bool OT::Lookup::sanitize<OT::Layout::GSUB_impl::SubstLookupSubTable>(hb_sanitize_context_t*) const
bool OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, void, true>::serialize_serialize<hb_map_iter_t<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16>>, ._anon_131 const&, (hb_function_sortedness_t)1, (void*)0>&>(hb_serialize_context_t*, hb_map_iter_t<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16>>, ._anon_131 const&, (hb_function_sortedness_t)1, (void*)0>&)
bool OT::TupleValues::decompile<int>(OT::IntType<unsigned char, 1u> const*&, hb_vector_t<int, false>&, OT::IntType<unsigned char, 1u> const*, bool)
bool OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtable>(void const*, unsigned int, unsigned int*)
bool OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtableFormat12>(void const*, unsigned int, unsigned int*)
bool OT::cmap::accelerator_t::get_glyph_from_ascii<OT::CmapSubtable>(void const*, unsigned int, unsigned int*)
bool OT::cmap::accelerator_t::get_glyph_from_macroman<OT::CmapSubtable>(void const*, unsigned int, unsigned int*)
bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &OT::_hb_symbol_pua_map(unsigned int)>(void const*, unsigned int, unsigned int*)
bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &_hb_arabic_pua_simp_map(unsigned int)>(void const*, unsigned int, unsigned int*)
bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &_hb_arabic_pua_trad_map(unsigned int)>(void const*, unsigned int, unsigned int*)
bool OT::glyf_accelerator_t::get_points(hb_font_t*, hb_codepoint_t, T, hb_array_t<const int>) const [with T = OT::glyf_accelerator_t::points_aggregator_t; hb_font_t = hb_font_t; hb_codepoint_t = unsigned int]
bool OT::glyf_accelerator_t::get_points(hb_font_t*, hb_codepoint_t, T, hb_array_t<const int>) const [with T = OT::glyf_impl::path_builder_t; hb_font_t = hb_font_t; hb_codepoint_t = unsigned int]
bool OT::glyf_accelerator_t::get_points<OT::glyf_accelerator_t::points_aggregator_t>(hb_font_t*, unsigned int, OT::glyf_accelerator_t::points_aggregator_t, hb_array_t<int const>) const
bool OT::glyf_accelerator_t::get_points<OT::glyf_impl::path_builder_t>(hb_font_t*, unsigned int, OT::glyf_impl::path_builder_t, hb_array_t<int const>) const
bool OT::glyf_impl::Glyph::get_points<OT::glyf_accelerator_t>(hb_font_t*, OT::glyf_accelerator_t const&, contour_point_vector_t&, contour_point_vector_t*, head_maxp_info_t*, unsigned int*, bool, bool, bool, hb_array_t<int const>, hb_map_t*, unsigned int, unsigned int*) const
bool OT::glyf_impl::SimpleGlyph::get_contour_points(contour_point_vector_t&, bool) const
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat1_4<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat2_5<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat1_4<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat2_5<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat1_4<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat2_5<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes>>(void const*, OT::hb_ot_apply_context_t*, bool)
bool _hb_ot_metrics_get_position_common(hb_font_t*, hb_ot_metrics_tag_t, hb_position_t*)
bool _hb_shape_plan_execute_internal(hb_shape_plan_t*, hb_font_t*, hb_buffer_t*, const hb_feature_t*, unsigned int)
bool apply_string(OT::hb_ot_apply_context_t*, const typename Proxy::Lookup&, const OT::hb_ot_layout_lookup_accelerator_t&) [with Proxy = GSUBProxy; typename Proxy::Lookup = OT::Layout::GSUB_impl::SubstLookup]
bool apply_string<GSUBProxy>(OT::hb_ot_apply_context_t*, GSUBProxy::Lookup const&, OT::hb_ot_layout_lookup_accelerator_t const&) (.part.0)
bool buffer_verify_unsafe_to_break(hb_buffer_t*, hb_buffer_t*, hb_font_t*, const hb_feature_t*, unsigned int, const char* const*)
bool buffer_verify_unsafe_to_concat(hb_buffer_t*, hb_buffer_t*, hb_font_t*, const hb_feature_t*, unsigned int, const char* const*)
bool hb_buffer_t::ensure_glyphs()
bool hb_buffer_t::ensure_unicode()
bool hb_buffer_t::make_room_for(unsigned int, unsigned int)
bool hb_buffer_t::message_impl(hb_font_t*, const char*, __va_list_tag*)
bool hb_buffer_t::move_to(unsigned int)
bool hb_buffer_t::replace_glyphs(unsigned int, unsigned int, const T*) [with T = OT::HBGlyphID16]
bool hb_buffer_t::replace_glyphs(unsigned int, unsigned int, const T*) [with T = unsigned int]
bool hb_buffer_t::shift_forward(unsigned int)
bool hb_buffer_t::sync()
bool hb_object_destroy(Type*) [with Type = hb_blob_t]
bool hb_object_destroy(Type*) [with Type = hb_buffer_t]
bool hb_object_destroy(Type*) [with Type = hb_draw_funcs_t]
bool hb_object_destroy(Type*) [with Type = hb_face_t]
bool hb_object_destroy(Type*) [with Type = hb_font_funcs_t]
bool hb_object_destroy(Type*) [with Type = hb_font_t]
bool hb_object_destroy(Type*) [with Type = hb_map_t]
bool hb_object_destroy(Type*) [with Type = hb_paint_funcs_t]
bool hb_object_destroy(Type*) [with Type = hb_set_t]
bool hb_object_destroy(Type*) [with Type = hb_shape_plan_t]
bool hb_object_destroy(Type*) [with Type = hb_unicode_funcs_t]
bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_blob_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]
bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_buffer_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]
bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_draw_funcs_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]
bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_face_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]
bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_font_funcs_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]
bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_font_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]
bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_map_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]
bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_paint_funcs_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]
bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_set_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]
bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_shape_plan_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]
bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_unicode_funcs_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]
braceleft
braceright
bracketleft
bracketright
breve
brokenbar
bsuperior
buffer verify error: clusters are not monotone.
buffer verify error: text was: %s.
buffer verify error: unsafe-to-break test failed.
buffer verify error: unsafe-to-concat test failed.
buffer->content_type == source->content_type || !buffer->len || !source->len
buffer->have_positions
buffer->have_positions == source->have_positions || !buffer->len || !source->len
buffer_verify_error(hb_buffer_t*, hb_font_t*, char const*, ...)
bullet
cacute
calloc
calloc@GLIBC_2.2.5
canon_map
carf\v
caron
ccaron
ccccccccccc
ccccccccccccdc
ccedilla
cedilla
cent
centinferior
centoldstyle
centsuperior
cff1_cs_opset_extents_t::process_seac(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
cff1_path_param_t::cubic_to(CFF::point_t const&, CFF::point_t const&, CFF::point_t const&)
cff1_path_param_t::line_to(CFF::point_t const&)
cff1_path_param_t::move_to(CFF::point_t const&)
cff1_std_strings(unsigned int) (.part.0)
cff1_std_strings_msgidx
cff1_std_strings_msgstr
cff2_path_param_t::cubic_to(CFF::point_t const&, CFF::point_t const&, CFF::point_t const&) (.isra.0)
cff2_path_param_t::line_to(CFF::point_t const&) (.isra.0)
cff2_path_param_t::move_to(CFF::point_t const&) (.isra.0)
cinu
circumflex
collect_features_arabic(hb_ot_shape_planner_t*)
collect_features_hangul(hb_ot_shape_planner_t*)
collect_features_indic(hb_ot_shape_planner_t*)
collect_features_khmer(hb_ot_shape_planner_t*)
collect_features_myanmar(hb_ot_shape_planner_t*)
collect_features_use(hb_ot_shape_planner_t*)
colon
colonmonetary
comma
commainferior
commasuperior
common_features
compare_combining_class(hb_glyph_info_t const*, hb_glyph_info_t const*)
compare_entries(void const*, void const*)
compare_myanmar_order(hb_glyph_info_t const*, hb_glyph_info_t const*)
completed.0
compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)::sDageshForms
compose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
compose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
compose_use(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
const page_t& hb_bit_set_t::page_at(unsigned int) const
contour_point_vector_t::extend(hb_array_t<contour_point_t> const&)
coords_length == font->num_coords
copyright
count >= glyf_impl::PHANTOM_COUNT
cp2c&
crfa\v
crtstuff.c
cs2c&
currency
current->head <= (const char *) &ofs
cursive attached glyph at %u to glyph at %u
cursive attaching glyph at %u to glyph at %u
d"dRdidwd~d
d*4d8
d,,,,,$$$$$$VW+VU+
d,,,,,>$$$=>,$$$$>=$$$$VVVYZ9UGbW
d,-ff
d,CCCCC,,,\v\v\v,
d,CCCCCCCCC$$$FUW,
d0ddm0ddd
dOeVelexe
dagger
daggerdbl
dart
data_create_arabic(hb_ot_shape_plan_t const*)
data_create_hangul(hb_ot_shape_plan_t const*)
data_create_indic(hb_ot_shape_plan_t const*)
data_create_khmer(hb_ot_shape_plan_t const*)
data_create_use(hb_ot_shape_plan_t const*)
data_destroy_arabic(void*)
data_destroy_hangul(void*)
data_destroy_indic(void*)
data_destroy_khmer(void*)
data_destroy_use(void*)
dcroat
dd4d
dd4d-ff
dd4dgdddhid
dd4dgdddlid
dd4drss
dddd
ddddd
dddddddd
ddddddddd
dddddddddddd
dddddddddddddd<<<<<<<<<<<<<<<
deallocate_buffer_var(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
decltype((*this)._dispatch(fp, (hb_priority<16u>)(), ())) hb_sanitize_context_t::dispatch<OT::Layout::Common::Coverage>(OT::Layout::Common::Coverage const&)
decltype(fp.sanitize(this, ())) hb_sanitize_context_t::_dispatch<OT::Layout::Common::Coverage>(OT::Layout::Common::Coverage const&, hb_priority<1u>) (.part.0)
decltype(hb_iter(fp).end()) end<hb_set_t const&, (void*)0>(hb_set_t const&)
decltype(hb_iter(fp).end()) end<hb_set_t&, (void*)0>(hb_set_t&)
decompose(hb_ot_shape_normalize_context_t const*, bool, unsigned int)
decompose_current_character(hb_ot_shape_normalize_context_t const*, bool)
decompose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
decompose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
defg=?h
degree
deleted glyph at %u (multiple substitution)
deleting glyph at %u (multiple substitution)
deregister_tm_clones
destroy_ft_library(void*)
dhtd
dieresis
direction_strings
divide
diwf
diwh
diwp
diwq
diwt
do-hans
do-hant
do-hant-hk
do-hant-mo
dollar
dollarinferior
dollaroldstyle
dollarsuperior
dotaccent
dotlessi
dpqq
dsuperior
eacute
ecircumflex
edieresis
eeeeeeeee
egrave
eight
eightinferior
eightoldstyle
eightsuperior
el-polyton
ellipsis
emdash
end chainsubtable %u
end fallback kern
end fallback mark
end inserting dotted-circles
end kern
end lookup %u feature '%c%c%c%c'
end postprocess-glyphs
end preprocess-text
end reorder
end reordering USE
end reordering indic final
end reordering indic initial
end reordering khmer
end reordering myanmar
end subtable %u
end table GPOS script tag '%c%c%c%c'
end table GSUB script tag '%c%c%c%c'
end table kern
end table kerx
end table mort
end table morx
endash
equal
esac!
esuperior
exclam
exclamdown
exclamdownsmall
exclamsmall
expert_charset_sid_to_gid
expert_charset_to_sid
expert_encoding_to_code
expert_subset_charset_sid_to_gid
expert_subset_charset_to_sid
fIftf
fallback
fasthash64(void const*, unsigned long, unsigned long) (.constprop.0)
fclose
fclose@GLIBC_2.2.5
feature_mappings
feof
feof@GLIBC_2.2.5
ferpL
ferror
ferror@GLIBC_2.2.5
ffffffffff
fgmu
fhprL
figuredash
final_reordering_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
finalize_ft_library(void*)
find_syllables_indic(hb_buffer_t*)
find_syllables_use(hb_buffer_t*)
find_syllables_use(hb_buffer_t*) (.cold)
five
fiveeighths
fiveinferior
fiveoldstyle
fivesuperior
flahL
florin
fnis\n
fopen64
fopen64@GLIBC_2.2.5
format1_names(unsigned int) (.part.0)
format1_names_msgidx
format1_names_msgstr
four
fourinferior
fouroldstyle
foursuperior
fputc
fputc@GLIBC_2.2.5
fraction
frame_dummy
franc
fread
fread@GLIBC_2.2.5
free
free@GLIBC_2.2.5
free_langs()
free_static_C_locale()
free_static_draw_extents_funcs()
free_static_ft_funcs()
free_static_ft_library()
free_static_glib_funcs()
free_static_ot_funcs()
free_static_outline_recording_pen_funcs()
free_static_paint_extents_funcs()
free_static_shaper_list()
free_static_shapers()
free_static_ucd_funcs()
freelocale
freelocale@GLIBC_2.3
frkrM
ft_library_key
ftspL
fvbaL
fwlbL
fwrite
fwrite@GLIBC_2.2.5
g!gNgSgVg^g{g
g<k6l
g_bytes_get_data
g_bytes_ref
g_bytes_unref
g_unichar_combining_class
g_unichar_compose
g_unichar_decompose
g_unichar_get_mirror_char
g_unichar_get_script
g_unichar_type
g_unicode_script_from_iso15924
g_unicode_script_to_iso15924
gbreve
germandbls
get_gsubgpos_table(hb_face_t*, unsigned int)
getenv
getenv@GLIBC_2.2.5
gggggggggggggg
gid%u
gilc
gild
gilh
gilr
gneB
grave
greater
greaterequal
guillemotleft
guillemotright
guilsinglleft
guilsinglright
h-min
h-min-nan
hangul_features
harfbuzz 
hb-aat-layout.cc
hb-aat-map.cc
hb-blob.cc
hb-buffer-serialize.cc
hb-buffer-verify.cc
hb-buffer.cc
hb-common.cc
hb-draw.cc
hb-face-builder.cc
hb-face.cc
hb-fallback-shape.cc
hb-font.cc
hb-ft.cc
hb-glib.cc
hb-map.cc
hb-number.cc
hb-ot-cff1-table.cc
hb-ot-cff2-table.cc
hb-ot-color.cc
hb-ot-face.cc
hb-ot-font.cc
hb-ot-layout.cc
hb-ot-map.cc
hb-ot-math.cc
hb-ot-meta.cc
hb-ot-metrics.cc
hb-ot-name.cc
hb-ot-shape-fallback.cc
hb-ot-shape-normalize.cc
hb-ot-shape.cc
hb-ot-shaper-arabic.cc
hb-ot-shaper-default.cc
hb-ot-shaper-hangul.cc
hb-ot-shaper-hebrew.cc
hb-ot-shaper-indic-table.cc
hb-ot-shaper-indic.cc
hb-ot-shaper-khmer.cc
hb-ot-shaper-myanmar.cc
hb-ot-shaper-syllabic.cc
hb-ot-shaper-thai.cc
hb-ot-shaper-use.cc
hb-ot-shaper-vowel-constraints.cc
hb-ot-tag.cc
hb-ot-var.cc
hb-outline.cc
hb-paint-extents.cc
hb-paint.cc
hb-set.cc
hb-shape-plan.cc
hb-shape.cc
hb-shaper.cc
hb-static.cc
hb-style.cc
hb-ucd.cc
hb-unicode.cc
hb_aat_layout_compile_map(hb_aat_map_builder_t const*, hb_aat_map_t*)
hb_aat_layout_feature_type_get_name_id
hb_aat_layout_feature_type_get_selector_infos
hb_aat_layout_find_feature_mapping(unsigned int)
hb_aat_layout_get_feature_types
hb_aat_layout_has_positioning
hb_aat_layout_has_substitution
hb_aat_layout_has_tracking
hb_aat_layout_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
hb_aat_layout_remove_deleted_glyphs(hb_buffer_t*)
hb_aat_layout_substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_feature_t const*, unsigned int)
hb_aat_layout_track(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
hb_aat_layout_zero_width_deleted_glyphs(hb_buffer_t*)
hb_aat_map_builder_t::add_feature(hb_feature_t const&)
hb_aat_map_builder_t::compile(hb_aat_map_t&)
hb_aat_map_builder_t::feature_event_t::cmp(void const*, void const*)
hb_aat_map_builder_t::feature_info_t::cmp(void const*, void const*)
hb_bit_page_t::add_range(unsigned int, unsigned int)
hb_bit_page_t::del_range(unsigned int, unsigned int)
hb_bit_set_invertible_t::add(unsigned int)
hb_bit_set_invertible_t::add_range(unsigned int, unsigned int)
hb_bit_set_invertible_t::get_population() const
hb_bit_set_invertible_t::next(unsigned int*) const
hb_bit_set_invertible_t::union_(hb_bit_set_invertible_t const&)
hb_bit_set_t::add_range(unsigned int, unsigned int)
hb_bit_set_t::add_range(unsigned int, unsigned int) (.isra.0)
hb_bit_set_t::del_range(unsigned int, unsigned int)
hb_bit_set_t::get(unsigned int) const
hb_bit_set_t::is_subset(hb_bit_set_t const&) const
hb_bit_set_t::next(unsigned int*) const
hb_bit_set_t::page_for(unsigned int, bool)
hb_bit_set_t::page_t& hb_bit_set_t::page_at(unsigned int)
hb_bit_set_t::previous(unsigned int*) const
hb_bit_set_t::process_(hb_vector_size_t<unsigned long long, 64u> (*)(hb_vector_size_t<unsigned long long, 64u> const&, hb_vector_size_t<unsigned long long, 64u> const&), bool, bool, hb_bit_set_t const&)
hb_bit_set_t::resize(unsigned int, bool, bool)
hb_bit_set_t::set(hb_bit_set_t const&, bool)
hb_blob_copy_writable_or_fail
hb_blob_create
hb_blob_create_from_file
hb_blob_create_from_file_or_fail
hb_blob_create_or_fail
hb_blob_create_sub_blob
hb_blob_destroy
hb_blob_get_data
hb_blob_get_data_writable
hb_blob_get_empty
hb_blob_get_length
hb_blob_get_user_data
hb_blob_is_immutable
hb_blob_make_immutable
hb_blob_reference
hb_blob_set_user_data
hb_blob_t* OT::SBIXStrike::get_glyph_blob(unsigned int, hb_blob_t*, hb_tag_t, int*, int*, unsigned int, unsigned int*) const
hb_blob_t::try_make_writable()
hb_blob_t::try_make_writable_inplace()
hb_blob_t::try_make_writable_inplace_unix()
hb_buffer_add
hb_buffer_add_codepoints
hb_buffer_add_latin1
hb_buffer_add_utf16
hb_buffer_add_utf32
hb_buffer_add_utf8
hb_buffer_allocation_successful
hb_buffer_append
hb_buffer_clear_contents
hb_buffer_create
hb_buffer_create_similar
hb_buffer_deserialize_glyphs
hb_buffer_deserialize_unicode
hb_buffer_destroy
hb_buffer_diff
hb_buffer_diff_flags_t hb_buffer_diff(hb_buffer_t*, hb_buffer_t*, hb_codepoint_t, unsigned int)
hb_buffer_get_cluster_level
hb_buffer_get_content_type
hb_buffer_get_direction
hb_buffer_get_empty
hb_buffer_get_flags
hb_buffer_get_glyph_infos
hb_buffer_get_glyph_positions
hb_buffer_get_invisible_glyph
hb_buffer_get_language
hb_buffer_get_length
hb_buffer_get_not_found_glyph
hb_buffer_get_not_found_variation_selector_glyph
hb_buffer_get_random_state
hb_buffer_get_replacement_codepoint
hb_buffer_get_script
hb_buffer_get_segment_properties
hb_buffer_get_unicode_funcs
hb_buffer_get_user_data
hb_buffer_guess_segment_properties
hb_buffer_has_positions
hb_buffer_normalize_glyphs
hb_buffer_pre_allocate
hb_buffer_reference
hb_buffer_reset
hb_buffer_reverse
hb_buffer_reverse_clusters
hb_buffer_reverse_range
hb_buffer_serialize
hb_buffer_serialize_format_from_string
hb_buffer_serialize_format_to_string
hb_buffer_serialize_glyphs
hb_buffer_serialize_list_formats
hb_buffer_serialize_unicode
hb_buffer_set_cluster_level
hb_buffer_set_content_type
hb_buffer_set_direction
hb_buffer_set_flags
hb_buffer_set_invisible_glyph
hb_buffer_set_language
hb_buffer_set_length
hb_buffer_set_message_func
hb_buffer_set_not_found_glyph
hb_buffer_set_not_found_variation_selector_glyph
hb_buffer_set_random_state
hb_buffer_set_replacement_codepoint
hb_buffer_set_script
hb_buffer_set_segment_properties
hb_buffer_set_unicode_funcs
hb_buffer_set_user_data
hb_buffer_t::_infos_set_glyph_flags(hb_glyph_info_t*, unsigned int, unsigned int, unsigned int, unsigned int)
hb_buffer_t::_set_glyph_flags(unsigned int, unsigned int, unsigned int, bool, bool)
hb_buffer_t::add(unsigned int, unsigned int)
hb_buffer_t::add_info(hb_glyph_info_t const&)
hb_buffer_t::clear()
hb_buffer_t::clear_output()
hb_buffer_t::clear_positions()
hb_buffer_t::delete_glyph()
hb_buffer_t::delete_glyphs_inplace(bool (*)(hb_glyph_info_t const*))
hb_buffer_t::enlarge(unsigned int)
hb_buffer_t::enter()
hb_buffer_t::get_scratch_buffer(unsigned int*)
hb_buffer_t::guess_segment_properties()
hb_buffer_t::leave()
hb_buffer_t::make_room_for(unsigned int, unsigned int)
hb_buffer_t::merge_clusters_impl(unsigned int, unsigned int)
hb_buffer_t::merge_out_clusters(unsigned int, unsigned int)
hb_buffer_t::message(hb_font_t*, char const*, ...)
hb_buffer_t::message_impl(hb_font_t*, char const*, __va_list_tag*)
hb_buffer_t::move_to(unsigned int)
hb_buffer_t::next_glyph()
hb_buffer_t::reset()
hb_buffer_t::reverse_range(unsigned int, unsigned int)
hb_buffer_t::scratch_buffer_t* hb_buffer_t::get_scratch_buffer(unsigned int*)
hb_buffer_t::set_masks(unsigned int, unsigned int, unsigned int, unsigned int)
hb_buffer_t::shift_forward(unsigned int)
hb_buffer_t::similar(hb_buffer_t const&)
hb_buffer_t::sort(unsigned int, unsigned int, int (*)(hb_glyph_info_t const*, hb_glyph_info_t const*))
hb_buffer_t::sync()
hb_buffer_t::sync_so_far()
hb_buffer_t::verify(hb_buffer_t*, hb_font_t*, hb_feature_t const*, unsigned int, char const* const*)
hb_bytes_t cff1_std_strings(unsigned int)
hb_bytes_t format1_names(unsigned int)
hb_bytes_t hb_serialize_context_t::copy_bytes() const
hb_color_get_alpha
hb_color_get_blue
hb_color_get_green
hb_color_get_red
hb_color_line_get_color_stops
hb_color_line_get_extend
hb_direction_from_string
hb_direction_to_string
hb_draw_close_path
hb_draw_close_path_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
hb_draw_close_path_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
hb_draw_cubic_to
hb_draw_cubic_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
hb_draw_cubic_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
hb_draw_extents_cubic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
hb_draw_extents_line_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
hb_draw_extents_move_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
hb_draw_extents_quadratic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
hb_draw_funcs_create
hb_draw_funcs_destroy
hb_draw_funcs_get_empty
hb_draw_funcs_get_user_data
hb_draw_funcs_is_immutable
hb_draw_funcs_make_immutable
hb_draw_funcs_reference
hb_draw_funcs_set_close_path_func
hb_draw_funcs_set_cubic_to_func
hb_draw_funcs_set_line_to_func
hb_draw_funcs_set_move_to_func
hb_draw_funcs_set_quadratic_to_func
hb_draw_funcs_set_user_data
hb_draw_funcs_t::start_path(void*, hb_draw_state_t&)
hb_draw_line_to
hb_draw_line_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
hb_draw_line_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
hb_draw_move_to
hb_draw_move_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
hb_draw_move_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
hb_draw_quadratic_to
hb_draw_quadratic_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
hb_draw_quadratic_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
hb_face_builder_add_table
hb_face_builder_create
hb_face_builder_sort_tables
hb_face_collect_nominal_glyph_mapping
hb_face_collect_unicodes
hb_face_collect_variation_selectors
hb_face_collect_variation_unicodes
hb_face_count
hb_face_create
hb_face_create_for_tables
hb_face_create_from_file_or_fail
hb_face_create_or_fail
hb_face_destroy
hb_face_get_empty
hb_face_get_glyph_count
hb_face_get_index
hb_face_get_table_tags
hb_face_get_upem
hb_face_get_user_data
hb_face_is_immutable
hb_face_make_immutable
hb_face_reference
hb_face_reference_blob
hb_face_reference_table
hb_face_set_get_table_tags_func
hb_face_set_glyph_count
hb_face_set_index
hb_face_set_upem
hb_face_set_user_data
hb_face_t::load_num_glyphs() const
hb_face_t::load_upem() const
hb_feature_from_string
hb_feature_to_string
hb_first
hb_font_add_glyph_origin_for_direction
hb_font_create
hb_font_create_sub_font
hb_font_destroy
hb_font_draw_glyph
hb_font_draw_glyph_default(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
hb_font_draw_glyph_nil(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
hb_font_funcs_create
hb_font_funcs_destroy
hb_font_funcs_get_empty
hb_font_funcs_get_user_data
hb_font_funcs_is_immutable
hb_font_funcs_make_immutable
hb_font_funcs_reference
hb_font_funcs_set_draw_glyph_func
hb_font_funcs_set_font_h_extents_func
hb_font_funcs_set_font_v_extents_func
hb_font_funcs_set_glyph_contour_point_func
hb_font_funcs_set_glyph_extents_func
hb_font_funcs_set_glyph_from_name_func
hb_font_funcs_set_glyph_func
hb_font_funcs_set_glyph_h_advance_func
hb_font_funcs_set_glyph_h_advances_func
hb_font_funcs_set_glyph_h_kerning_func
hb_font_funcs_set_glyph_h_origin_func
hb_font_funcs_set_glyph_name_func
hb_font_funcs_set_glyph_shape_func
hb_font_funcs_set_glyph_v_advance_func
hb_font_funcs_set_glyph_v_advances_func
hb_font_funcs_set_glyph_v_kerning_func
hb_font_funcs_set_glyph_v_origin_func
hb_font_funcs_set_nominal_glyph_func
hb_font_funcs_set_nominal_glyphs_func
hb_font_funcs_set_paint_glyph_func
hb_font_funcs_set_user_data
hb_font_funcs_set_variation_glyph_func
hb_font_get_empty
hb_font_get_extents_for_direction
hb_font_get_face
hb_font_get_font_h_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
hb_font_get_font_h_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
hb_font_get_font_v_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
hb_font_get_font_v_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
hb_font_get_glyph
hb_font_get_glyph_advance_for_direction
hb_font_get_glyph_advances_for_direction
hb_font_get_glyph_contour_point
hb_font_get_glyph_contour_point_default(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
hb_font_get_glyph_contour_point_for_origin
hb_font_get_glyph_contour_point_nil(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
hb_font_get_glyph_extents
hb_font_get_glyph_extents_default(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
hb_font_get_glyph_extents_for_origin
hb_font_get_glyph_extents_nil(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
hb_font_get_glyph_from_name
hb_font_get_glyph_from_name_default(hb_font_t*, void*, char const*, int, unsigned int*, void*)
hb_font_get_glyph_from_name_nil(hb_font_t*, void*, char const*, int, unsigned int*, void*)
hb_font_get_glyph_h_advance
hb_font_get_glyph_h_advance_default(hb_font_t*, void*, unsigned int, void*)
hb_font_get_glyph_h_advance_nil(hb_font_t*, void*, unsigned int, void*)
hb_font_get_glyph_h_advances
hb_font_get_glyph_h_advances_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
hb_font_get_glyph_h_kerning
hb_font_get_glyph_h_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
hb_font_get_glyph_h_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
hb_font_get_glyph_h_origin
hb_font_get_glyph_h_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
hb_font_get_glyph_h_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
hb_font_get_glyph_kerning_for_direction
hb_font_get_glyph_name
hb_font_get_glyph_name_default(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
hb_font_get_glyph_name_nil(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
hb_font_get_glyph_origin_for_direction
hb_font_get_glyph_shape
hb_font_get_glyph_v_advance
hb_font_get_glyph_v_advance_default(hb_font_t*, void*, unsigned int, void*)
hb_font_get_glyph_v_advance_nil(hb_font_t*, void*, unsigned int, void*)
hb_font_get_glyph_v_advances
hb_font_get_glyph_v_advances_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
hb_font_get_glyph_v_kerning
hb_font_get_glyph_v_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
hb_font_get_glyph_v_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
hb_font_get_glyph_v_origin
hb_font_get_glyph_v_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
hb_font_get_glyph_v_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
hb_font_get_h_extents
hb_font_get_nominal_glyph
hb_font_get_nominal_glyph_default(hb_font_t*, void*, unsigned int, unsigned int*, void*)
hb_font_get_nominal_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int*, void*)
hb_font_get_nominal_glyph_trampoline(hb_font_t*, void*, unsigned int, unsigned int*, void*)
hb_font_get_nominal_glyphs
hb_font_get_nominal_glyphs_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
hb_font_get_parent
hb_font_get_ppem
hb_font_get_ptem
hb_font_get_scale
hb_font_get_serial
hb_font_get_synthetic_bold
hb_font_get_synthetic_slant
hb_font_get_user_data
hb_font_get_v_extents
hb_font_get_var_coords_design
hb_font_get_var_coords_normalized
hb_font_get_var_named_instance
hb_font_get_variation_glyph
hb_font_get_variation_glyph_default(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
hb_font_get_variation_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
hb_font_get_variation_glyph_trampoline(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
hb_font_glyph_from_string
hb_font_glyph_to_string
hb_font_is_immutable
hb_font_make_immutable
hb_font_make_immutable.localalias
hb_font_paint_glyph
hb_font_paint_glyph_default(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
hb_font_paint_glyph_nil(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
hb_font_reference
hb_font_set_face
hb_font_set_funcs
hb_font_set_funcs_data
hb_font_set_parent
hb_font_set_ppem
hb_font_set_ptem
hb_font_set_scale
hb_font_set_synthetic_bold
hb_font_set_synthetic_slant
hb_font_set_user_data
hb_font_set_var_coords_design
hb_font_set_var_coords_normalized
hb_font_set_var_named_instance
hb_font_set_variation
hb_font_set_variations
hb_font_subtract_glyph_origin_for_direction
hb_font_t::guess_v_origin_minus_h_origin(unsigned int, int*, int*)
hb_font_t::has_func(unsigned int)
hb_font_t::has_func_set(unsigned int)
hb_font_t::scale_glyph_extents(hb_glyph_extents_t*)
hb_ft_draw_glyph(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
hb_ft_face_create
hb_ft_face_create_cached
hb_ft_face_create_from_file_or_fail
hb_ft_face_create_referenced
hb_ft_face_finalize(void*)
hb_ft_font_changed
hb_ft_font_create
hb_ft_font_create_referenced
hb_ft_font_get_face
hb_ft_font_get_load_flags
hb_ft_font_lock_face
hb_ft_font_set_funcs
hb_ft_font_set_load_flags
hb_ft_font_unlock_face
hb_ft_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
hb_ft_get_glyph_contour_point(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
hb_ft_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
hb_ft_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
hb_ft_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
hb_ft_get_glyph_h_kerning(hb_font_t*, void*, unsigned int, unsigned int, void*)
hb_ft_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
hb_ft_get_glyph_v_advance(hb_font_t*, void*, unsigned int, void*)
hb_ft_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
hb_ft_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
hb_ft_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
hb_ft_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
hb_ft_hb_font_changed
hb_get_glyph_alternates_dispatch_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<hb_get_glyph_alternates_dispatch_t, unsigned int&, unsigned int&, unsigned int*&, unsigned int*&>(hb_get_glyph_alternates_dispatch_t*, unsigned int, unsigned int&, unsigned int&, unsigned int*&, unsigned int*&) const (.isra.0)
hb_glib_blob_create
hb_glib_get_unicode_funcs
hb_glib_script_from_script
hb_glib_script_to_script
hb_glib_unicode_combining_class(hb_unicode_funcs_t*, unsigned int, void*)
hb_glib_unicode_compose(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
hb_glib_unicode_decompose(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
hb_glib_unicode_general_category(hb_unicode_funcs_t*, unsigned int, void*)
hb_glib_unicode_mirroring(hb_unicode_funcs_t*, unsigned int, void*)
hb_glib_unicode_script(hb_unicode_funcs_t*, unsigned int, void*)
hb_glyph_info_get_glyph_flags
hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::alloc(unsigned int)
hb_hashmap_t<unsigned int, face_table_info_t, false>::alloc(unsigned int)
hb_hashmap_t<unsigned int, face_table_info_t, false>::item_t::get_key()
hb_hashmap_t<unsigned int, face_table_info_t, false>::item_t::get_pair() const
hb_hashmap_t<unsigned int, face_table_info_t, false>::item_t::get_value()
hb_hashmap_t<unsigned int, face_table_info_t, false>::item_t::is_real() const
hb_hashmap_t<unsigned int, hb::unique_ptr<hb_set_t>, false>::alloc(unsigned int)
hb_hashmap_t<unsigned int, hb_set_t, false>::alloc(unsigned int)
hb_hashmap_t<unsigned int, unsigned int, true>::alloc(unsigned int)
hb_hashmap_t<unsigned int, unsigned int, true>::del(unsigned int const&)
hb_hashmap_t<unsigned int, unsigned int, true>::item_t::get_key()
hb_hashmap_t<unsigned int, unsigned int, true>::item_t::get_pair() const
hb_hashmap_t<unsigned int, unsigned int, true>::item_t::get_value()
hb_hashmap_t<unsigned int, unsigned int, true>::item_t::is_real() const
hb_identity
hb_indic_get_categories(unsigned int)
hb_language_from_string
hb_language_get_default
hb_language_get_default::default_language
hb_language_matches
hb_language_to_string
hb_lazy_loader_t<AAT::feat, hb_table_lazy_loader_t<AAT::feat, 34u, false>, hb_face_t, 34u, hb_blob_t>::get_stored() const
hb_lazy_loader_t<OT::CBDT_accelerator_t, hb_face_lazy_loader_t<OT::CBDT_accelerator_t, 37u>, hb_face_t, 37u, OT::CBDT_accelerator_t>::get_stored() const
hb_lazy_loader_t<OT::CPAL, hb_table_lazy_loader_t<OT::CPAL, 36u, true>, hb_face_t, 36u, hb_blob_t>::get_stored() const
hb_lazy_loader_t<OT::GDEF_accelerator_t, hb_face_lazy_loader_t<OT::GDEF_accelerator_t, 24u>, hb_face_t, 24u, OT::GDEF_accelerator_t>::get_stored() const
hb_lazy_loader_t<OT::GPOS_accelerator_t, hb_face_lazy_loader_t<OT::GPOS_accelerator_t, 26u>, hb_face_t, 26u, OT::GPOS_accelerator_t>::get_stored() const
hb_lazy_loader_t<OT::GSUB_accelerator_t, hb_face_lazy_loader_t<OT::GSUB_accelerator_t, 25u>, hb_face_t, 25u, OT::GSUB_accelerator_t>::get_stored() const
hb_lazy_loader_t<OT::MATH, hb_table_lazy_loader_t<OT::MATH, 40u, true>, hb_face_t, 40u, hb_blob_t>::get_stored() const
hb_lazy_loader_t<OT::MVAR, hb_table_lazy_loader_t<OT::MVAR, 22u, true>, hb_face_t, 22u, hb_blob_t>::get_stored() const
hb_lazy_loader_t<OT::OS2, hb_table_lazy_loader_t<OT::OS2, 6u, true>, hb_face_t, 6u, hb_blob_t>::get_stored() const
hb_lazy_loader_t<OT::avar, hb_table_lazy_loader_t<OT::avar, 19u, true>, hb_face_t, 19u, hb_blob_t>::get_stored() const
hb_lazy_loader_t<OT::cff1_accelerator_t, hb_face_lazy_loader_t<OT::cff1_accelerator_t, 16u>, hb_face_t, 16u, OT::cff1_accelerator_t>::get_stored() const
hb_lazy_loader_t<OT::cff2_accelerator_t, hb_face_lazy_loader_t<OT::cff2_accelerator_t, 17u>, hb_face_t, 17u, OT::cff2_accelerator_t>::get_stored() const
hb_lazy_loader_t<OT::hhea, hb_table_lazy_loader_t<OT::hhea, 4u, true>, hb_face_t, 4u, hb_blob_t>::get_stored() const
hb_lazy_loader_t<OT::sbix_accelerator_t, hb_face_lazy_loader_t<OT::sbix_accelerator_t, 38u>, hb_face_t, 38u, OT::sbix_accelerator_t>::get_stored() const
hb_lazy_loader_t<OT::vhea, hb_table_lazy_loader_t<OT::vhea, 11u, true>, hb_face_t, 11u, hb_blob_t>::get_stored() const
hb_map_allocation_successful
hb_map_clear
hb_map_copy
hb_map_create
hb_map_del
hb_map_destroy
hb_map_get
hb_map_get_empty
hb_map_get_population
hb_map_get_user_data
hb_map_has
hb_map_hash
hb_map_is_empty
hb_map_is_equal
hb_map_keys
hb_map_next
hb_map_reference
hb_map_set
hb_map_set_user_data
hb_map_update
hb_map_values
hb_object_is_valid (obj)
hb_ot_color_glyph_get_layers
hb_ot_color_glyph_has_paint
hb_ot_color_glyph_reference_png
hb_ot_color_glyph_reference_svg
hb_ot_color_has_layers
hb_ot_color_has_paint
hb_ot_color_has_palettes
hb_ot_color_has_png
hb_ot_color_has_svg
hb_ot_color_palette_color_get_name_id
hb_ot_color_palette_get_colors
hb_ot_color_palette_get_count
hb_ot_color_palette_get_flags
hb_ot_color_palette_get_name_id
hb_ot_draw_glyph(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
hb_ot_face_t::fini()
hb_ot_face_t::init0(hb_face_t*)
hb_ot_font_cmap_cache_user_data_key
hb_ot_font_set_funcs
hb_ot_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
hb_ot_get_font_v_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
hb_ot_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
hb_ot_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
hb_ot_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
hb_ot_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
hb_ot_get_glyph_v_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
hb_ot_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
hb_ot_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
hb_ot_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
hb_ot_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
hb_ot_layout_collect_features
hb_ot_layout_collect_features_map
hb_ot_layout_collect_lookups
hb_ot_layout_feature_get_characters
hb_ot_layout_feature_get_lookups
hb_ot_layout_feature_get_name_ids
hb_ot_layout_feature_with_variations_get_lookups
hb_ot_layout_get_attach_points
hb_ot_layout_get_baseline
hb_ot_layout_get_baseline2
hb_ot_layout_get_baseline_with_fallback
hb_ot_layout_get_baseline_with_fallback2
hb_ot_layout_get_font_extents
hb_ot_layout_get_font_extents2
hb_ot_layout_get_glyph_class
hb_ot_layout_get_glyphs_in_class
hb_ot_layout_get_horizontal_baseline_tag_for_script
hb_ot_layout_get_ligature_carets
hb_ot_layout_get_size_params
hb_ot_layout_has_cross_kerning(hb_face_t*)
hb_ot_layout_has_glyph_classes
hb_ot_layout_has_kerning(hb_face_t*)
hb_ot_layout_has_machine_kerning(hb_face_t*)
hb_ot_layout_has_positioning
hb_ot_layout_has_substitution
hb_ot_layout_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
hb_ot_layout_language_find_feature
hb_ot_layout_language_get_feature_indexes
hb_ot_layout_language_get_feature_tags
hb_ot_layout_language_get_required_feature
hb_ot_layout_language_get_required_feature_index
hb_ot_layout_lookup_collect_glyphs
hb_ot_layout_lookup_get_glyph_alternates
hb_ot_layout_lookup_get_optical_bound
hb_ot_layout_lookup_substitute_closure
hb_ot_layout_lookup_would_substitute
hb_ot_layout_lookups_substitute_closure
hb_ot_layout_position_finish_advances(hb_font_t*, hb_buffer_t*)
hb_ot_layout_position_finish_offsets(hb_font_t*, hb_buffer_t*)
hb_ot_layout_position_start(hb_font_t*, hb_buffer_t*)
hb_ot_layout_script_find_language
hb_ot_layout_script_get_language_tags
hb_ot_layout_script_select_language
hb_ot_layout_script_select_language2
hb_ot_layout_substitute_lookup(OT::hb_ot_apply_context_t*, OT::Layout::GSUB_impl::SubstLookup const&, OT::hb_ot_layout_lookup_accelerator_t const&)
hb_ot_layout_substitute_start(hb_font_t*, hb_buffer_t*)
hb_ot_layout_table_choose_script
hb_ot_layout_table_find_feature(hb_face_t*, unsigned int, unsigned int, unsigned int*)
hb_ot_layout_table_find_feature_variations
hb_ot_layout_table_find_script
hb_ot_layout_table_get_feature_tags
hb_ot_layout_table_get_lookup_count
hb_ot_layout_table_get_script_tags
hb_ot_layout_table_select_script
hb_ot_map_builder_t::add_feature(unsigned int, hb_ot_map_feature_flags_t, unsigned int)
hb_ot_map_builder_t::add_lookups(hb_ot_map_t&, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, bool, bool, unsigned int)
hb_ot_map_builder_t::add_pause(unsigned int, bool (*)(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*))
hb_ot_map_builder_t::compile(hb_ot_map_t&, hb_ot_shape_plan_key_t const&)
hb_ot_map_builder_t::feature_info_t::cmp(void const*, void const*)
hb_ot_map_builder_t::has_feature(unsigned int)
hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, hb_segment_properties_t const&)
hb_ot_map_builder_t::~hb_ot_map_builder_t()
hb_ot_map_t::collect_lookups(unsigned int, hb_set_t*) const
hb_ot_map_t::feature_map_t::cmp(void const*, void const*)
hb_ot_map_t::lookup_map_t::cmp(void const*, void const*)
hb_ot_map_t::position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
hb_ot_map_t::substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
hb_ot_math_get_constant
hb_ot_math_get_constant.cold
hb_ot_math_get_glyph_assembly
hb_ot_math_get_glyph_italics_correction
hb_ot_math_get_glyph_kerning
hb_ot_math_get_glyph_kernings
hb_ot_math_get_glyph_top_accent_attachment
hb_ot_math_get_glyph_variants
hb_ot_math_get_min_connector_overlap
hb_ot_math_has_data
hb_ot_math_is_glyph_extended_shape
hb_ot_meta_get_entry_tags
hb_ot_meta_reference_entry
hb_ot_metrics_get_position
hb_ot_metrics_get_position_with_fallback
hb_ot_metrics_get_position_with_fallback.localalias
hb_ot_metrics_get_variation
hb_ot_metrics_get_x_variation
hb_ot_metrics_get_y_variation
hb_ot_name_get_utf16
hb_ot_name_get_utf32
hb_ot_name_get_utf8
hb_ot_name_list_names
hb_ot_paint_glyph(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
hb_ot_shape_glyphs_closure
hb_ot_shape_normalize_context_t::compose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
hb_ot_shape_normalize_context_t::decompose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
hb_ot_shape_plan_collect_lookups
hb_ot_shape_plan_t::fini()
hb_ot_shape_plan_t::init0(hb_face_t*, hb_shape_plan_key_t const*)
hb_ot_shape_plan_t::position(hb_font_t*, hb_buffer_t*) const
hb_ot_shape_plan_t::substitute(hb_font_t*, hb_buffer_t*) const
hb_ot_shape_planner_t::compile(hb_ot_shape_plan_t&, hb_ot_shape_plan_key_t const&)
hb_ot_shape_planner_t::hb_ot_shape_planner_t(hb_face_t*, hb_segment_properties_t const&)
hb_ot_tag_from_language
hb_ot_tag_to_language
hb_ot_tag_to_script
hb_ot_tags_from_language(char const*, char const*, unsigned int*, unsigned int*)::last_tag_idx
hb_ot_tags_from_script
hb_ot_tags_from_script_and_language
hb_ot_tags_to_script_and_language
hb_ot_var_find_axis
hb_ot_var_find_axis_info
hb_ot_var_get_axes
hb_ot_var_get_axis_count
hb_ot_var_get_axis_infos
hb_ot_var_get_named_instance_count
hb_ot_var_has_data
hb_ot_var_named_instance_get_design_coords
hb_ot_var_named_instance_get_postscript_name_id
hb_ot_var_named_instance_get_subfamily_name_id
hb_ot_var_normalize_coords
hb_ot_var_normalize_variations
hb_outline_recording_pen_close_path(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
hb_outline_recording_pen_cubic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
hb_outline_recording_pen_get_funcs()
hb_outline_recording_pen_line_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
hb_outline_recording_pen_move_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
hb_outline_recording_pen_quadratic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
hb_outline_t::control_area() const
hb_outline_t::embolden(float, float, float, float)
hb_outline_t::replay(hb_draw_funcs_t*, void*) const
hb_paint_color
hb_paint_color_glyph
hb_paint_color_glyph_nil(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
hb_paint_color_nil(hb_paint_funcs_t*, void*, int, unsigned int, void*)
hb_paint_custom_palette_color
hb_paint_custom_palette_color_nil(hb_paint_funcs_t*, void*, unsigned int, unsigned int*, void*)
hb_paint_extents_context_t::hb_paint_extents_context_t()
hb_paint_extents_get_funcs()
hb_paint_extents_paint_color(hb_paint_funcs_t*, void*, int, unsigned int, void*)
hb_paint_extents_paint_image(hb_paint_funcs_t*, void*, hb_blob_t*, unsigned int, unsigned int, unsigned int, float, hb_glyph_extents_t*, void*)
hb_paint_extents_paint_linear_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
hb_paint_extents_paint_radial_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
hb_paint_extents_paint_sweep_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, void*)
hb_paint_extents_pop_clip(hb_paint_funcs_t*, void*, void*)
hb_paint_extents_pop_group(hb_paint_funcs_t*, void*, hb_paint_composite_mode_t, void*)
hb_paint_extents_pop_transform(hb_paint_funcs_t*, void*, void*)
hb_paint_extents_push_clip_glyph(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
hb_paint_extents_push_clip_rectangle(hb_paint_funcs_t*, void*, float, float, float, float, void*)
hb_paint_extents_push_group(hb_paint_funcs_t*, void*, void*)
hb_paint_extents_push_transform(hb_paint_funcs_t*, void*, float, float, float, float, float, float, void*)
hb_paint_funcs_create
hb_paint_funcs_destroy
hb_paint_funcs_get_empty
hb_paint_funcs_get_user_data
hb_paint_funcs_is_immutable
hb_paint_funcs_make_immutable
hb_paint_funcs_reference
hb_paint_funcs_set_color_func
hb_paint_funcs_set_color_glyph_func
hb_paint_funcs_set_custom_palette_color_func
hb_paint_funcs_set_image_func
hb_paint_funcs_set_linear_gradient_func
hb_paint_funcs_set_pop_clip_func
hb_paint_funcs_set_pop_group_func
hb_paint_funcs_set_pop_transform_func
hb_paint_funcs_set_push_clip_glyph_func
hb_paint_funcs_set_push_clip_rectangle_func
hb_paint_funcs_set_push_group_func
hb_paint_funcs_set_push_transform_func
hb_paint_funcs_set_radial_gradient_func
hb_paint_funcs_set_sweep_gradient_func
hb_paint_funcs_set_user_data
hb_paint_image
hb_paint_image_nil(hb_paint_funcs_t*, void*, hb_blob_t*, unsigned int, unsigned int, unsigned int, float, hb_glyph_extents_t*, void*)
hb_paint_linear_gradient
hb_paint_linear_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
hb_paint_pop_clip
hb_paint_pop_clip_nil(hb_paint_funcs_t*, void*, void*)
hb_paint_pop_group
hb_paint_pop_group_nil(hb_paint_funcs_t*, void*, hb_paint_composite_mode_t, void*)
hb_paint_pop_transform
hb_paint_pop_transform_nil(hb_paint_funcs_t*, void*, void*)
hb_paint_push_clip_glyph
hb_paint_push_clip_glyph_nil(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
hb_paint_push_clip_rectangle
hb_paint_push_clip_rectangle_nil(hb_paint_funcs_t*, void*, float, float, float, float, void*)
hb_paint_push_group
hb_paint_push_group_nil(hb_paint_funcs_t*, void*, void*)
hb_paint_push_transform
hb_paint_push_transform_nil(hb_paint_funcs_t*, void*, float, float, float, float, float, float, void*)
hb_paint_radial_gradient
hb_paint_radial_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
hb_paint_sweep_gradient
hb_paint_sweep_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, void*)
hb_parse_double(char const**, char const*, double*, bool)
hb_parse_int(char const**, char const*, int*, bool)
hb_parse_uint(char const**, char const*, unsigned int*, bool, int)
hb_pool_t<hb_serialize_context_t::object_t, 32u>::alloc()
hb_position_single_dispatch_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<hb_position_single_dispatch_t, hb_font_t*&, hb_blob_t*&, hb_direction_t&, unsigned int&, hb_glyph_position_t&>(hb_position_single_dispatch_t*, unsigned int, hb_font_t*&, hb_blob_t*&, hb_direction_t&, unsigned int&, hb_glyph_position_t&) const (.isra.0)
hb_sanitize_context_t::reset_object()
hb_sanitize_context_t::return_t OT::ChainContext::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
hb_sanitize_context_t::return_t OT::Context::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
hb_sanitize_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
hb_sanitize_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
hb_sanitize_context_t::return_t OT::Paint::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
hb_sanitize_context_t::return_t OT::kern::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
hb_sanitize_context_t::start_processing()
hb_script_from_iso15924_tag
hb_script_from_string
hb_script_get_horizontal_direction
hb_script_to_iso15924_tag
hb_second
hb_segment_properties_equal
hb_segment_properties_equal (&shape_plan->key.props, &buffer->props)
hb_segment_properties_hash
hb_segment_properties_overlay
hb_serialize_context_t::copy_bytes() const
hb_serialize_context_t::objidx_t hb_serialize_context_t::pop_pack(bool)
hb_serialize_context_t::pop_discard()
hb_serialize_context_t::pop_pack(bool)
hb_serialize_context_t::resolve_links()
hb_set_add
hb_set_add_range
hb_set_add_sorted_array
hb_set_allocation_successful
hb_set_clear
hb_set_copy
hb_set_create
hb_set_del
hb_set_del_range
hb_set_destroy
hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>::add_range(unsigned int, unsigned int)
hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>::may_have(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>> const&) const (.part.0)
hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>::may_have(unsigned int) const (.part.0)
hb_set_get_empty
hb_set_get_max
hb_set_get_min
hb_set_get_population
hb_set_get_user_data
hb_set_has
hb_set_hash
hb_set_intersect
hb_set_invert
hb_set_is_empty
hb_set_is_equal
hb_set_is_inverted
hb_set_is_subset
hb_set_next
hb_set_next_many
hb_set_next_range
hb_set_previous
hb_set_previous_range
hb_set_reference
hb_set_set
hb_set_set_user_data
hb_set_subtract
hb_set_symmetric_difference
hb_set_union
hb_shape
hb_shape_full
hb_shape_list_shapers
hb_shape_plan_create
hb_shape_plan_create2
hb_shape_plan_create_cached
hb_shape_plan_create_cached2
hb_shape_plan_destroy
hb_shape_plan_execute
hb_shape_plan_get_empty
hb_shape_plan_get_shaper
hb_shape_plan_get_user_data
hb_shape_plan_key_t::equal(hb_shape_plan_key_t const*)
hb_shape_plan_key_t::init(bool, hb_face_t*, hb_segment_properties_t const*, hb_feature_t const*, unsigned int, int const*, unsigned int, char const* const*)
hb_shape_plan_key_t::user_features_match(hb_shape_plan_key_t const*)
hb_shape_plan_reference
hb_shape_plan_set_user_data
hb_sparseset_t<hb_bit_set_invertible_t>::init()
hb_sparseset_t<hb_bit_set_invertible_t>::~hb_sparseset_t()
hb_style_get_value
hb_style_get_value.localalias
hb_syllabic_clear_var(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
hb_syllabic_insert_dotted_circles(hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, int, int)
hb_table_lazy_loader_t<OT::avar, 19u, true>::create(hb_face_t*)
hb_tag_from_string
hb_tag_to_string
hb_ucd_combining_class(hb_unicode_funcs_t*, unsigned int, void*)
hb_ucd_compose(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
hb_ucd_decompose(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
hb_ucd_general_category(hb_unicode_funcs_t*, unsigned int, void*)
hb_ucd_get_unicode_funcs
hb_ucd_mirroring(hb_unicode_funcs_t*, unsigned int, void*)
hb_ucd_script(hb_unicode_funcs_t*, unsigned int, void*)
hb_unicode_combining_class
hb_unicode_combining_class_nil(hb_unicode_funcs_t*, unsigned int, void*)
hb_unicode_compose
hb_unicode_compose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
hb_unicode_decompose
hb_unicode_decompose_compatibility
hb_unicode_decompose_compatibility_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, void*)
hb_unicode_decompose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
hb_unicode_eastasian_width
hb_unicode_eastasian_width_nil(hb_unicode_funcs_t*, unsigned int, void*)
hb_unicode_funcs_create
hb_unicode_funcs_destroy
hb_unicode_funcs_destroy.localalias
hb_unicode_funcs_get_default
hb_unicode_funcs_get_empty
hb_unicode_funcs_get_parent
hb_unicode_funcs_get_user_data
hb_unicode_funcs_is_immutable
hb_unicode_funcs_make_immutable
hb_unicode_funcs_reference
hb_unicode_funcs_set_combining_class_func
hb_unicode_funcs_set_compose_func
hb_unicode_funcs_set_decompose_compatibility_func
hb_unicode_funcs_set_decompose_func
hb_unicode_funcs_set_eastasian_width_func
hb_unicode_funcs_set_general_category_func
hb_unicode_funcs_set_mirroring_func
hb_unicode_funcs_set_script_func
hb_unicode_funcs_set_user_data
hb_unicode_general_category
hb_unicode_general_category_nil(hb_unicode_funcs_t*, unsigned int, void*)
hb_unicode_mirroring
hb_unicode_mirroring_nil(hb_unicode_funcs_t*, unsigned int, void*)
hb_unicode_script
hb_unicode_script_nil(hb_unicode_funcs_t*, unsigned int, void*)
hb_use_u16
hb_use_u8
hb_variation_from_string
hb_variation_to_string
hb_vector_size_t<unsigned long long, 64u> hb_bit_set_t::op_<._anon_136>(hb_vector_size_t<unsigned long long, 64u> const&, hb_vector_size_t<unsigned long long, 64u> const&)
hb_vector_size_t<unsigned long long, 64u> hb_bit_set_t::op_<._anon_137>(hb_vector_size_t<unsigned long long, 64u> const&, hb_vector_size_t<unsigned long long, 64u> const&)
hb_vector_size_t<unsigned long long, 64u> hb_bit_set_t::op_<._anon_139>(hb_vector_size_t<unsigned long long, 64u> const&, hb_vector_size_t<unsigned long long, 64u> const&)
hb_vector_size_t<unsigned long long, 64u> hb_bit_set_t::op_<._anon_140>(hb_vector_size_t<unsigned long long, 64u> const&, hb_vector_size_t<unsigned long long, 64u> const&)
hb_vector_t<CFF::cff1_font_dict_values_t, false>::shrink_vector(unsigned int)
hb_vector_t<CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>, false>::shrink_vector(unsigned int)
hb_vector_t<contour_point_t, false>::alloc(unsigned int, bool)
hb_vector_t<contour_point_t, false>::resize(int, bool, bool)
hb_vector_t<hb_bit_page_t, false>::alloc(unsigned int, bool)
hb_vector_t<hb_pool_t<hb_serialize_context_t::object_t, 32u>::chunk_t*, false>::alloc(unsigned int, bool)
hb_vector_t<hb_serialize_context_t::object_t*, false>::alloc(unsigned int, bool)
hb_vector_t<hb_serialize_context_t::object_t::link_t, false>::push()
hb_vector_t<hb_set_t, false>::push()
hb_vector_t<hb_set_t, false>::shrink_vector(unsigned int)
hb_version
hb_version_atleast
hb_version_string
hddddddddddddddddddddddddddidddddd
hhhhhhhhhihjkDFDDDDDDDlmnopqrstjuvwxDyz{D:;D|}~
hhijhhhhhhhhhhhhhhhhhhhhhhhhhhhh
hijklmnopqrstuvwxyz{|}~
horizontal_features
hsws$
hungarumlaut
hwsc$
hyphen
hypheninferior
hyphensuperior
hypotf
hypotf@GLIBC_2.2.5
i < ARRAY_LENGTH (HB_STRING_ARRAY_OFFS_NAME) - 1
i < page_map.length
i <= out_len + (len - idx)
i\t4^l\t9A
iacute
icircumflex
idieresis
idx + num_in <= len
idx <= end
idx <= len
idx >= count
igrave
ii,,,,,\v\v\v\v
iiii
iiii++V
iiiii
iiiiiiiii
iiiiiiiiiii
ij$$$=,,,$+U,,,,>$+k@,,,,$+,,,,,,$$$$$$=$=+,,,,,,$$+W+++VVVVUW+++++
ij:&Q
index <= count
indic_configs
indic_features
indic_table
infinity
initial_reordering_consonant_syllable(hb_ot_shape_plan_t const*, hb_face_t*, hb_buffer_t*, unsigned int, unsigned int) (.isra.0)
initial_reordering_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
int hb_buffer_t::sync_so_far()
integral
invalid
is_deleted_glyph(hb_glyph_info_t const*)
isuperior
j - i <= ARRAY_LENGTH (temp)
jjjjjjjjhhhhhhhhhhhh
jkdlmn
joining_table
joining_type(unsigned int)
json
jy-hans
jy-hant
jy-hant-hk
jy-hant-mo
k!kTkrkwkyk
kNlgl
kcln
kerned glyphs at %u,%u
khmer_features
kkkk
kkkkk
kkkkkkk
kkkkkkkk
kkkkkkkkkkkkkk
kkkkvv\t
kmkm\r
kram\r
krgm
lahv
lang_find_or_insert(char const*)
langs
langsys_collect_features(hb_collect_features_context_t*, OT::LangSys const&)
lapv
lati 
lcol
len < ARRAY_LENGTH (s)
less
lessequal
lgnh
libc.so.6
libfreetype.so.6
libglib-2.0.so.0
libharfbuzz.so.0
libm.so.6
libpthread.so.0
ligated glyph at %u
ligating glyphs at %s
ligature_3_table
ligature_mark_table
ligature_table
link.width == 2 || link.width == 3 || link.width == 4
link.width == 2 || link.width == 4
lkm,o
lllllll
llllllllll
lmaT
logicalnot
losianif2nif3nifidem2demtini
lositiniidemaniffrkrfvbafwlbflahftsputavtcjc
lozenge
lpms
lslash
lsuperior
ltit
m
m4m>mAmimjmwmxm
m<7\ntttt
machine_index_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t>>, find_syllables_use(hb_buffer_t*)::'lambda'(hb_glyph_info_t const&), ._anon_132 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::'lambda0'(hb_pair_t<unsigned int, hb_glyph_info_t const&>), ._anon_120 const&, (void*)0>>>::operator=(machine_index_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t>>, find_syllables_use(hb_buffer_t*)::'lambda'(hb_glyph_info_t const&), ._anon_132 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::'lambda0'(hb_pair_t<unsigned int, hb_glyph_info_t const&>), ._anon_120 const&, (void*)0>>> const&)
macron
malloc
malloc@GLIBC_2.2.5
mant
memcmp
memcmp@GLIBC_2.2.5
memcpy
memcpy@GLIBC_2.14
memmove
memmove@GLIBC_2.2.5
memset
memset@GLIBC_2.2.5
minus
minus_1
mmap64
mmap64@GLIBC_2.2.5
mmmmmmmmmmm
mn-hans
mn-hant
mn-hant-hk
mn-hant-mo
mnnnn
mnw-TH
mprotect
mprotect@GLIBC_2.2.5
msuperior
multiplied glyphs at %s
multiply
multiplying glyph at %u
munl
munmap
munmap@GLIBC_2.2.5
muno
munp
munt
mvba
mvhjxo
mwlb
myanmar_basic_features
myanmar_other_features
mylM
n,(((4((((Q((((Q,,$$$,=$$$$$$>=,=>$$$]
n,,+++P++++++++P9+++9P++P,,(((((((,,,,,,,,9+++J(((,
n/nnn
ndro\n
newlocale
newlocale@GLIBC_2.3
nhkaM
nil_shaper_list
nine
nineinferior
nineoldstyle
ninesuperior
nlahM
nnnnnn
nnnnnnnnnnnnnnn
nonbreakingspace
nonmarkingreturn
notequal
np-hans
np-hant
np-hant-hk
np-hant-mo
nprs
nrek
nsuperior
ntilde
num_contours > 0
numbersign
o"o#ono
o),,$^WVUkW,$$,,,,,,$$$=,>$$
o-bok
o-nyn
oacute
obj->head <= obj->tail
ocircumflex
odieresis
offset >= link.bias
ogonek
ograve
ojoh
omjlomjvomjt
onedotenleader
oneeighth
onefitted
onehalf
oneinferior
oneoldstyle
onequarter
onesuperior
onethird
opqr
ordfeminine
ordmasculine
orez
oslash
osuperior
ot_languages2
ot_languages3
otilde
override_features_hangul(hb_ot_shape_planner_t*)
override_features_indic(hb_ot_shape_planner_t*)
override_features_khmer(hb_ot_shape_planner_t*)
p9pJpppwp}p
pEqIqnq
packed.length > 1
packed.tail ()->head == tail
pacp%
paragraph
parenleft
parenleftinferior
parenleftsuperior
parenright
parenrightinferior
parenrightsuperior
parse_tag(char const**, char const*, unsigned int*)
partialdiff
pcms%
percent
period
periodcentered
periodinferior
periodsuperior
perthousand
plus
plusminus
pmcc
position_cluster(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, bool)
positioned glyph at %u
positioning glyph at %u
postprocess_glyphs_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
pppp
pppppNNNNNNNNNNNNNN
pqdddddddddddddddddr
pqr9
preprocess_text_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
preprocess_text_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
preprocess_text_thai(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
preprocess_text_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
product
pspc!
pthread_mutex_destroy
pthread_mutex_destroy@GLIBC_2.2.5
pthread_mutex_init
pthread_mutex_init@GLIBC_2.2.5
pthread_mutex_lock
pthread_mutex_lock@GLIBC_2.2.5
pthread_mutex_unlock
pthread_mutex_unlock@GLIBC_2.2.5
px-hans
px-hant
px-hant-hk
px-hant-mo
qfffrs
qqqqqqqq
qqqqqqqqqqqqq
qtul
question
questiondown
questiondownsmall
questionsmall
quotedbl
quotedblbase
quotedblleft
quotedblright
quoteleft
quoteright
quotesinglbase
quotesingle
r(r+r5rPrbr
r*suszs
radical
rafcL
realloc
realloc@GLIBC_2.2.5
record_pref_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
record_rphf_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
record_stch(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
recursed to lookup %u
recursing to lookup %u at %u
reference_ft_library()
registered
reorder_khmer(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
reorder_marks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
reorder_marks_hebrew(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
reorder_myanmar(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
reorder_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
replaced glyph at %u (alternate substitution)
replaced glyph at %u (ligature substitution)
replaced glyph at %u (multiple substitution)
replaced glyph at %u (reverse chaining substitution)
replaced glyph at %u (single substitution)
replacing glyph at %u (alternate substitution)
replacing glyph at %u (ligature substitution)
replacing glyph at %u (multiple substitution)
replacing glyph at %u (reverse chaining substitution)
replacing glyph at %u (single substitution)
ring
rjuG
ro-MD
rrrrrrrrrrrrr
rsuperior
rt-lojban
rtrv
rupiah
sbus\n
scaron
scedilla
script_collect_features(hb_collect_features_context_t*, OT::Script const&, unsigned int const*)
section
semicolon
serpM
serp\r
serpsvbaswlbstspfhprferpfwlbftsp
setlocale
setlocale@GLIBC_2.2.5
setup_masks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
setup_masks_arabic_plan(arabic_shape_plan_t const*, hb_buffer_t*, hb_script_t)
setup_masks_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
setup_masks_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
setup_masks_khmer(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
setup_masks_myanmar(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
setup_masks_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
setup_syllables_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
setup_syllables_khmer(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
setup_syllables_myanmar(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
setup_syllables_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
seven
seveneighths
seveninferior
sevenoldstyle
sevensuperior
shape_plan->face_unsafe == font->face
shaping_table
sincosf
sincosf@GLIBC_2.2.5
sixinferior
sixoldstyle
sixsuperior
size <= length
skipped inserting dotted-circles because there is no broken syllables
skipped lookup %u feature '%c%c%c%c' because no glyph matches
slash
sn-hans
sn-hant
sn-hant-hk
sn-hant-mo
snap_head <= head
sp-hans
sp-hant
sp-hant-hk
sp-hant-mo
space
spus\n
sruc
sssssssssssssss
ssuperior
standard_encoding_to_code
standard_encoding_to_sid
start <= out_len
start chainsubtable %u
start fallback kern
start fallback mark
start inserting dotted-circles
start kern
start lookup %u feature '%c%c%c%c'
start postprocess-glyphs
start preprocess-text
start reorder
start reordering USE
start reordering indic final
start reordering indic initial
start reordering khmer
start reordering myanmar
start subtable %u
start table GPOS script tag '%c%c%c%c'
start table GSUB script tag '%c%c%c%c'
start table kern
start table kerx
start table mort
start table morx
static uint32_t OT::CheckSum::CalcTableChecksum(const HBUINT32*, uint32_t)
static_C_locale
static_draw_extents_funcs
static_endchar_str
static_ft_funcs
static_ft_library
static_glib_funcs
static_ot_funcs
static_outline_recording_pen_funcs
static_paint_extents_funcs
static_shaper_list
static_shapers
static_ucd_funcs
stdddddddddudddddddddddddddv'wxyz{|}~
stderr
stderr@GLIBC_2.2.5
sterling
strchr
strchr@GLIBC_2.2.5
strcmp
strcmp@GLIBC_2.2.5
strerror
strerror@GLIBC_2.2.5
strike_offset < sbix_len
strlen
strlen@GLIBC_2.2.5
strncmp
strncmp@GLIBC_2.2.5
strncpy
strncpy@GLIBC_2.2.5
strrchr
strrchr@GLIBC_2.2.5
strstr
strstr@GLIBC_2.2.5
strtol
strtol@GLIBC_2.2.5
strtoul
strtoul@GLIBC_2.2.5
stspM
stsp\r
stuvwxyz
subtag_matches(char const*, char const*, char const*, unsigned int) (.part.0)
successful ()
summation
svbaM
svba\r
svbaswlbnlahserpstsp
swap(hb_bit_set_invertible_t&, hb_bit_set_invertible_t&) (.part.0)
swlbM
swlb\r
sysconf
sysconf@GLIBC_2.2.5
t\tt"tGt\titqt
table_tags
tail <= snap_tail
tail == obj->head
tcjcM
text_start < text_end
thai_above_state_machine
thai_below_state_machine
thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::RD_mappings
thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SDL_mappings
thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SD_mappings
thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SL_mappings
this->start <= (char *) obj
this->start <= this->end
this->table.get_length () >= this->table->stringOffset
thorn
three
threeeighths
threeinferior
threeoldstyle
threequarters
threequartersemdash
threesuperior
tilde
tiniL
tiniidemaniflosigilrgilrgilr
tkunM
tlac
tlac$
tlah
tlap
tlav
tlcr
tpxe
trademark
trampoline_destroy(void*)
trev
tried kerning glyphs at %u,%u
try kerning glyphs at %u,%u
tsid
tsih(
tsuperior
ttttt
twodotenleader
twoinferior
twooldstyle
twosuperior
twothirds
u$u;u>uYueupu
uacute
ucircumflex
udieresis
ue-hans
ugrave
uleT
und-Geok
und-Syre
und-Syrj
und-Syrn
und-fonipa
und-fonnapa
underscore
uniscribe-bug-compatible
unsigned int OT::CFFIndex<COUNT>::offset_at(unsigned int) const [with COUNT = OT::IntType<short unsigned int>]
unsigned int OT::CFFIndex<COUNT>::offset_at(unsigned int) const [with COUNT = OT::IntType<unsigned int>]
unsigned int _hb_buffer_serialize_invalid(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_format_t, hb_buffer_serialize_flags_t)
uruG
use_basic_features
use_other_features
use_topographical_features
uselocale
uselocale@GLIBC_2.3
utavM
uu-hans
uu-hant
uu-hant-hk
uu-hant-mo
uuuu
uwxyz !{vv" vv|v}xzz !{vvv vv|vxzz !{vvv vv|v~vvv
v#{vvvvv~v
v#{vvvvv~vwxy1 !{vv" vv|v~vvv
v#{vvvvv~v{vv
v#{vvvvv~v~vvv
vBviv
vfprintf
vfprintf@GLIBC_2.2.5
vh\]^_lnopqijkcdewxyr`ab~s
void AAT::Lookup<OT::IntType<unsigned int, 4u>>::collect_glyphs<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>>(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>&, unsigned int) const
void AAT::Lookup<OT::IntType<unsigned short, 2u>>::collect_glyphs<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>>(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>&, unsigned int) const
void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>::drive<AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::Format1Entry<true>::EntryData>::drive<AAT::KerxSubTableFormat1<AAT::KerxSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<AAT::KerxSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::InsertionSubtable<AAT::ExtendedTypes>::EntryData>::drive<AAT::InsertionSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::InsertionSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::EntryData>::drive<AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::LigatureEntry<true>::EntryData>::drive<AAT::LigatureSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::LigatureSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
void AAT::StateTableDriver<AAT::ExtendedTypes, void>::drive<AAT::RearrangementSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::RearrangementSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
void AAT::StateTableDriver<AAT::ObsoleteTypes, AAT::ContextualSubtable<AAT::ObsoleteTypes>::EntryData>::drive<AAT::ContextualSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::ContextualSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
void AAT::StateTableDriver<AAT::ObsoleteTypes, AAT::InsertionSubtable<AAT::ObsoleteTypes>::EntryData>::drive<AAT::InsertionSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::InsertionSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::KerxSubTableFormat1<OT::KernAATSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<OT::KernAATSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::KerxSubTableFormat1<OT::KernOTSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<OT::KernOTSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::LigatureSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::LigatureSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::RearrangementSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::RearrangementSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
void OT::Layout::Common::Coverage::intersect_set<hb_set_t&, (void*)0>(hb_set_t const&, hb_set_t&) const
void OT::Layout::propagate_attachment_offsets(hb_glyph_position_t*, unsigned int, unsigned int, hb_direction_t, unsigned int)
void OT::MarkGlyphSetsFormat1::collect_coverage<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>>(hb_vector_t<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u>>>, false>&) const
void OT::context_closure_recurse_lookups<OT::IntType<unsigned short, 2u>>(OT::hb_closure_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::LookupRecord const*, unsigned int, OT::ContextFormat, void const*, void (*)(hb_set_t const*, void const*, unsigned int, hb_set_t*, void*), void*)
void apply_stch(const hb_ot_shape_plan_t*, hb_buffer_t*, hb_font_t*)
void hb_bit_set_t::compact(hb_vector_t<unsigned int>&, unsigned int)
void hb_bit_set_t::process_(hb_bit_page_t::vector_t (*)(const vector_t&, const vector_t&), bool, bool, const hb_bit_set_t&)
void hb_bit_set_t::set_array<OT::HBGlyphID16>(bool, OT::HBGlyphID16 const*, unsigned int, unsigned int) (.part.0) (.constprop.0)
void hb_buffer_append(hb_buffer_t*, const hb_buffer_t*, unsigned int, unsigned int)
void hb_buffer_normalize_glyphs(hb_buffer_t*)
void hb_buffer_t::_set_glyph_flags(hb_mask_t, unsigned int, unsigned int, bool, bool)
void hb_buffer_t::allocate_var(unsigned int, unsigned int)
void hb_buffer_t::assert_glyphs()
void hb_buffer_t::assert_unicode()
void hb_buffer_t::assert_var(unsigned int, unsigned int)
void hb_buffer_t::deallocate_var(unsigned int, unsigned int)
void hb_buffer_t::sort(unsigned int, unsigned int, int (*)(const hb_glyph_info_t*, const hb_glyph_info_t*))
void hb_draw_funcs_t::start_path(void*, hb_draw_state_t&)
void hb_feature_to_string(hb_feature_t*, char*, unsigned int)
void hb_font_set_variation(hb_font_t*, hb_tag_t, float)
void hb_object_fini<hb_hashmap_t<unsigned int, hb::unique_ptr<hb_set_t>, false>>(hb_hashmap_t<unsigned int, hb::unique_ptr<hb_set_t>, false>*)
void hb_object_fini<hb_hashmap_t<unsigned int, hb_set_t, false>>(hb_hashmap_t<unsigned int, hb_set_t, false>*)
void hb_object_fini<hb_hashmap_t<unsigned int, unsigned int, true>>(hb_hashmap_t<unsigned int, unsigned int, true>*)
void hb_object_fini<hb_sparseset_t<hb_bit_set_invertible_t>>(hb_sparseset_t<hb_bit_set_invertible_t>*)
void hb_object_init<hb_hashmap_t<unsigned int, hb::unique_ptr<hb_set_t>, false>>(hb_hashmap_t<unsigned int, hb::unique_ptr<hb_set_t>, false>*)
void hb_object_init<hb_hashmap_t<unsigned int, unsigned int, true>>(hb_hashmap_t<unsigned int, unsigned int, true>*)
void hb_object_init<hb_sparseset_t<hb_bit_set_invertible_t>>(hb_sparseset_t<hb_bit_set_invertible_t>*)
void hb_ot_map_t::apply<GPOSProxy>(GPOSProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
void hb_ot_map_t::apply<GSUBProxy>(GSUBProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
void hb_sanitize_context_t::reset_object()
void hb_serialize_context_t::add_link(T&, hb_serialize_context_t::objidx_t, hb_serialize_context_t::whence_t, unsigned int) [with T = OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<short unsigned int>, void, true>; hb_serialize_context_t::objidx_t = unsigned int]
void hb_serialize_context_t::add_link(T&, hb_serialize_context_t::objidx_t, hb_serialize_context_t::whence_t, unsigned int) [with T = OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<short unsigned int>, void, true>; hb_serialize_context_t::objidx_t = unsigned int]
void hb_serialize_context_t::add_link(T&, hb_serialize_context_t::objidx_t, hb_serialize_context_t::whence_t, unsigned int) [with T = OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<short unsigned int>, void, true>; hb_serialize_context_t::objidx_t = unsigned int]
void hb_serialize_context_t::add_link(T&, hb_serialize_context_t::objidx_t, hb_serialize_context_t::whence_t, unsigned int) [with T = OT::OffsetTo<OT::Layout::GSUB_impl::SubstLookupSubTable, OT::IntType<short unsigned int>, void, true>; hb_serialize_context_t::objidx_t = unsigned int]
void hb_serialize_context_t::assign_offset(const hb_serialize_context_t::object_t*, const hb_serialize_context_t::object_t::link_t&, unsigned int) [with T = int; unsigned int Size = 4]
void hb_serialize_context_t::assign_offset(const hb_serialize_context_t::object_t*, const hb_serialize_context_t::object_t::link_t&, unsigned int) [with T = short int; unsigned int Size = 2]
void hb_serialize_context_t::assign_offset(const hb_serialize_context_t::object_t*, const hb_serialize_context_t::object_t::link_t&, unsigned int) [with T = short unsigned int; unsigned int Size = 2]
void hb_serialize_context_t::assign_offset(const hb_serialize_context_t::object_t*, const hb_serialize_context_t::object_t::link_t&, unsigned int) [with T = unsigned int; unsigned int Size = 3]
void hb_serialize_context_t::assign_offset(const hb_serialize_context_t::object_t*, const hb_serialize_context_t::object_t::link_t&, unsigned int) [with T = unsigned int; unsigned int Size = 4]
void hb_serialize_context_t::discard_stale_objects()
void hb_serialize_context_t::end_serialize()
void hb_serialize_context_t::resolve_links()
void hb_serialize_context_t::revert(char*, char*)
void hb_vector_t<Type, sorted>::set_error() [with Type = CFF::cff1_top_dict_val_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = CFF::dict_val_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = CFF::op_str_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = OT::cff1::accelerator_t::gname_t; bool sorted = true]
void hb_vector_t<Type, sorted>::set_error() [with Type = contour_point_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = float; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_aat_map_builder_t::feature_range_t; bool sorted = true]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_aat_map_t::range_flags_t; bool sorted = true]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_bit_page_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_bit_set_t::page_map_t; bool sorted = true]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_bounds_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_ot_map_builder_t::feature_info_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_ot_map_builder_t::stage_info_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_ot_map_t::feature_map_t; bool sorted = true]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_ot_map_t::lookup_map_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_ot_map_t::stage_map_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_ot_name_entry_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_outline_point_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_pair_t<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<long unsigned int, 4>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<long unsigned int, 0>, hb_set_digest_bits_pattern_t<long unsigned int, 9> > >, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<long unsigned int, 4>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<long unsigned int, 0>, hb_set_digest_bits_pattern_t<long unsigned int, 9> > > >; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_pair_t<int, int>; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_pool_t<hb_serialize_context_t::object_t>::chunk_t*; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_serialize_context_t::object_t*; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_serialize_context_t::object_t::link_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<long unsigned int, 4>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<long unsigned int, 0>, hb_set_digest_bits_pattern_t<long unsigned int, 9> > >; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_set_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_transform_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_user_data_array_t::hb_user_data_item_t; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = hb_vector_t<hb_aat_map_t::range_flags_t, true>; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = int; bool sorted = false]
void hb_vector_t<Type, sorted>::set_error() [with Type = unsigned int; bool sorted = false]
void hb_vector_t<Type, sorted>::shrink_vector(unsigned int) [with Type = CFF::cff1_font_dict_values_t; bool sorted = false]
void hb_vector_t<Type, sorted>::shrink_vector(unsigned int) [with Type = CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>; bool sorted = false]
void hb_vector_t<Type, sorted>::shrink_vector(unsigned int) [with Type = hb_set_t; bool sorted = false]
void reorder_marks_arabic(const hb_ot_shape_plan_t*, hb_buffer_t*, unsigned int, unsigned int)
void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*)) (.constprop.0)
void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*)) (.constprop.1)
void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*)) (.constprop.2)
void sort_r_simple<void*>(void*, unsigned long, unsigned long, int (*)(void const*, void const*, void*), void*) (.constprop.0)
void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = const hb_blob_t; hb_user_data_key_t = hb_user_data_key_t]
void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = const hb_buffer_t; hb_user_data_key_t = hb_user_data_key_t]
void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = const hb_draw_funcs_t; hb_user_data_key_t = hb_user_data_key_t]
void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = const hb_face_t; hb_user_data_key_t = hb_user_data_key_t]
void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = const hb_font_funcs_t; hb_user_data_key_t = hb_user_data_key_t]
void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = const hb_font_t; hb_user_data_key_t = hb_user_data_key_t]
void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = const hb_map_t; hb_user_data_key_t = hb_user_data_key_t]
void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = const hb_paint_funcs_t; hb_user_data_key_t = hb_user_data_key_t]
void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = const hb_set_t; hb_user_data_key_t = hb_user_data_key_t]
void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = const hb_shape_plan_t; hb_user_data_key_t = hb_user_data_key_t]
void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = const hb_unicode_funcs_t; hb_user_data_key_t = hb_user_data_key_t]
vsnprintf
vsnprintf@GLIBC_2.2.5
vvvvvvvvvvv
vwxy
w@wJw
wNxkx
workspace.length == pages.length
wwwww
wwwwwwwwwwwwww
x*y<y>yHyIyPyVy]y^yey
x-hbot-%08x
xxxxy
xxxy
xxyxxxxxxxx
yacute
ybur
ydieresis
yyyZhniZzzzZbarAnmrAgneBlryCaveDroeGkerGrjuGuruGgnaHinaHrbeHariHadnKanaKooaLntaLmylMayrOlmaTuleTiahTtbiTopoBiarBsnaCrehCihtErmhKgnoMrmyMmagOrnuRhniScrySaahTiiiYtrsDhtoGlatIdhuBonaHglgTbgaTtrpCbmiLbniLamsOwahSelaTragUiguBtpoCgalGrahKulaToepXolySgnfTilaBxusXookNgahPxnhPiraCmahCilaKcpeLicyLidyLkclOgnjRruaSdnuSiiaVtsvAumaBpygEimrAilhPitrPavaJihtKusiLietMbraShkrOrmaSanaLtvaTktaBharBdnaMmkaCcreMoreMdrlPdrhSaroSrkaTssaBbhgAlpuDablEnarGjohKdniSaniLjhaMinaMdneMidoMoorMtabNbraNmrePgnmHmlaPcuaPplhPddiShriTaraWmohAwulHrtaHtluMgnuHwngSmldAskhBcraMegsOgnaTaweNmnoGuhsNoyoSbnaZrgoDgnoGghoRakaMfdeMogoSdgoSmylEdnaNpnmHohcWsrhCkaiDstiKizeYnmpCrguOasnTotoThtiVhtmZiwaKmgaNaraGhkuGiarKoanOunuSrdoTgtuTType* hb_object_reference(Type*) [with Type = hb_unicode_funcs_t]
yyyyyyyyy
yzyz
z@zJzOz
zcaron
zero
zeroinferior
zerooldstyle
zerosuperior
zh-HK
zh-Hans
zh-Hant
zh-MO
zh-cn
zh-hans
zh-hant
zh-hant-hk
zh-hant-mo
zh-sg
zh-tw
zo-hans
zo-hant
zo-hant-hk
zo-hant-mo
zzzz
zzzzzzzYYYYYYYYY
zzzzzzzzzz
{vvv vwxzz !{vvv vv|v
{v{v{vvv{v~v
{{{{{{{{{{{{{{
}}}}}}}}}}}
~~~~~~~~~~~
