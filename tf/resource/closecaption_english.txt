"lang"
{ 
"Language" "english" 
"Tokens" 
{
"#commentary\tf2-Comment000.mp3"   "[Gabe Newell] Welcome to Team Fortress 2. After nine years in development, hopefully it will have been worth the wait. To listen to a commentary node, put your crosshair over the floating commentary symbol and press your PRIMARY FIRE. To stop a commentary node, put your crosshair over the rotating node and press the PRIMARY FIRE again. Some commentary nodes may take control of the game in order to show something to you. In these cases, simply press your PRIMARY FIRE again to stop the commentary. In addition your SECONDARY FIRE will cycle you through all the commentary nodes in the level. Please let me know what you think after you have had a chance to play. I can be reached at gaben@valvesoftware.com, and my favorite class is the spy. Thanks, and have fun!"
"#commentary\tf2-Comment001.mp3"   "[Jeremy Stone] In multiplayer games, the content players consume is largely generated by other players.  To enhance this, we added features designed to promote relationships between players.  
For example, the freeze-cam shot of a player's killer helps the player remember specific, troublesome opponents.  The nemesis feature adds an additional reminder that certain enemies are more significant than others.  It creates a small negative reinforcement loop by giving players an opportunity to score extra points with a revenge kill.
"
"#commentary\tf2-Comment002.mp3"   "[Laura Dubuk] Maps require impassable boundaries, but unless we restrict the environments to either interior spaces or steep canyons, these boundaries can't always block the player's view of the outlying, unreachable area. In our more realistic titles, like HL2, these boundaries often require fictional and visual explanations. In the heavily stylized Team Fortress world, however, conspicuous artificiality is a core design principle and so we can simplify or altogether ignore these explanations without compromising the player experience. Playtesting showed, for instance, that these low fences leading to an empty expanse successfully conveyed the message that the area beyond the fence is uninteresting and out-of-bounds."
"#commentary\tf2-Comment003.mp3"   "[Ariel Diaz] Each of the Team Fortress classes was designed to make a unique contribution to attack and defense, and control points are, fundamentally, methods of focusing players' attention on these core offensive and defensive activities. They're also useful for drawing players to different points of the map."
"#commentary\tf2-Comment004.mp3"   "[Jeff Lane] In our original design, once attackers were cleared off a point, they lost any progress they'd made toward capturing the point. Playtests revealed that lone players near an enemy control point had no incentive to try to capture it if any enemies were in the area. Furthermore, once a team was reduced to defending a single control point, the stronger attacking team was often unable to successfully assault the final point for the full capture period, which caused too many games to end in a stalemate. We changed the capture mechanic so that capture progress persists for a while even after the attackers are cleared off the point, and this improvement fixed both of the problems with the original design.
"
"#commentary\tf2-Comment005.mp3"   "[Jim Hughes] To give players interesting navigation decisions, routes through a map should vary in effectiveness based on the player's current class and the state of the map. Water lets us increase the cost of taking a particular route, because swimming is slower than running. Spies often accept that cost in order to infiltrate undetected. Pyros avoid it because their primary weapon is useless underwater. If the enemy has a strong defense, the increased cost of the water route becomes a worthwhile tradeoff for any class trying to hit the defenders from behind."
"#commentary\tf2-Comment006.mp3"   "[Iikka Keranen] We build our 3d skyboxes at 1/16th scale to reduce the memory used by the large spaces in them. This means we have to get a little tricky when dealing with trains moving between the skybox and the player space. There are actually two versions of each moving train; A player-scaled one for the actual gameplay space, and a tiny one out in the skybox. The small repair sheds on either side of the middle building disguise the point at which we swap between the two trains."
"#commentary\tf2-Comment007.mp3"   "[Andrea Wicklund] Ideally, matches should end in a victory for one team and a loss for the other. Stalemates are essentially a loss for both teams. To avoid stalemates, our map design considers two key variables: team respawn times and travel time from the respawn point to the frontline. The team that's winning gets slightly faster respawn times and more forward respawn points, a positive reinforcement loop that increases the chances for them to push forward and win the game."
"#commentary\tf2-Comment008.mp3"   "[Dave Riller] To accommodate snipers, maps need wide open spaces, long sightlines, and protective cover.  Targets of the Sniper require alternate routes that bypass the Sniper's sightlines, though these usually have an additional cost, such as increased travel time.  This leaves players with a choice:  do they take the more direct, but hazardous route, or the safer yet slower route?  Sniper positions generally also have a corresponding enemy sniper deck, positioned on the other side of the arena, which allows one sniper to counter another, offering cover for teammates in exposed areas."
"#commentary\tf2-Comment009.mp3"   "[Bay Raitt] Stalemates generally occur around doors, where teams have a strong defensive presence on either side of the opening. To help counter this, we provide alternate routes with high travel costs that become more attractive only when the enemy has strong defenses behind the main route. The number of enemy entry points into an area is crucial to its design, since it's extremely hard to hold an area when enemies approach from multiple fronts. This makes one way exits a useful design tool, since they let us uncouple the number of enemy entry points from the number of friendly offensive routes."
"#commentary\tf2-Comment010.mp3"   "[Jamaal Bradley] For gameplay purposes, we sometimes need to neutralize the speeds of the classes. For instance, these central door timers were created to ensure that all classes could make it to the middle part of the map by the time the action actually starts. Playtesting showed that it was more fun to have the teams waiting as a group as soon as the doors open. The anticipation of battle, combined with the hazardous moving trains, creates a great opening clash for the middle control point."
"#commentary\tf2-Comment011.mp3"   "[Matt Boone] Bulletproof glass is a useful design tool in strongly defended areas, such as around control points. It gives the offensive team a chance to see enemy defenders and sentrygun positions, while affording the defensive team a good view of the gathering attackers. This is often crucial for the defense if the offense is waiting for a Medic's invulnerability charge."
"#commentary\tf2-Comment012.mp3"   "[Matthew Russell] On Attack/Defend maps, stalemates generally involve a weakly positioned attacking team beating its head against the wall as the timer bleeds out. To avoid this, we encourage likely losses to snowball into actual losses as quickly as possible. We start with a short time limit, and then add time whenever the offensive team succeeds in capturing a point. This way the round plays out in as short a time as possible and keeps the tension high throughout. Long round times aren't conducive to the sense of urgency we want to create."
"#commentary\tf2-Comment013.mp3"   "[John Cook] Height is a useful feature when designing defensible buildings. For instance, the Cap B building needs to be defended from all directions. The height, and windows on all sides, give defenders in this building an advantage, when launching rockets & grenades from within. Bulletproof glass in some windows lets them safely view approaching enemies."
"#commentary\tf2-Comment014.mp3"   "[Jake Nicholson ] For Soldiers, we design spaces with specific attention to height. Soldiers generally want to be shooting down at opponents to maximize the effect of their rockets' splash damage. The rooftop here gives them that advantage. It can also only be reached with the soldier's rocket jump, making it generally inaccessible to the other classes. Because of the splash damage from a rocket jump, soldiers have to trade health for the height advantage. This tradeoff, coupled with the lack of health on the roof, lets usmake the rooftop a powerful advantage without unbalancing the map, since soldiers will need to rely on medics down below to keep them healthy."
"#commentary\tf2-Comment015.mp3"   "[Dave Riller] To accommodate the scout class, maps need open spaces that allow scouts to double jump along paths that the other classes can't navigate.  This area features a variety of rooftops and rocks that a scout can traverse while staying above any non-scout opponents.  Scouts often use their speed advantage to retreat and collect health, so here we force them to adopt some risk by placing the health inside a small, enclosed area, where they sacrifice some freedom of movement."
"#commentary\tf2-Comment016.mp3"   "[Matt Boone] The Spy is designed for players who want to outsmart their opponents. At a high level, his gameplay flow is to infiltrate the enemy team, move around while disguised, and use his instant-kill backstab to take out key enemies, usually snipers, engineers, and medics. His invisibility cloak is designed to help him in two key situations. The first is in getting past the frontline, where players are most vigilant against enemies and most suspicious of friends not heading in the right direction. The second is in escaping from enemies who have seen through his disguise while he's in enemy territory. His sapper was designed to allow him to easily take out unattended enemy sentryguns, forcing enemy engineers to keep a close eye on their buildings."
"#commentary\tf2-Comment017.mp3"   "[Eric Kirchmer] Balancing the strength of the Engineer's AI-controlled sentrygun was one of more difficult design problems in Team Fortress 2. If the gun was too powerful, only the most skilled players would be able to counteract it. If the gun was too weak, the Engineer would have no chance against skilled players, effectively eliminating any reason to build it in the first place. Our solution was to make the sentrygun essentially binary in the sense that it's lethal to opponents who don't take cover, but can't intelligently deal with enemies popping in and out of cover. This forces the Engineer to use his own secondary weapons skill to compensate for the sentrygun's corner weakness, while still making the sentrygun a formidable obstacle for any opponent simply attempting to sprint past it."
"#commentary\tf2-Comment018.mp3"   "[Andrew Burke] The Scout is designed for players who are able to rapidly move around while tracking their target. Where other combat classes rely on high amounts of damage, the Scout relies on his high movement speed and double jump ability to dodge enemy fire. Much of his combat style is crafted through the features of his primary weapon, the scattergun. It does a large amount of damage, but has a wide spread that forces him to get close to the enemy for full effect, where he's also at highest risk of being hurt. It has a slow rate of fire that encourages him to pause to fire, then dodge, then pause, and so on, which gives enemies a higher chance to hit him at intervals. Finally, it holds a small clip and a slow reload time to encourage the Scout to pull out of combat to reload, something which he can do easily with his speed, and gives injured enemies a chance to run before the Scout returns."
"#commentary\tf2-Comment019.mp3"   "[Dhabih Eng] The Soldier is a core combat class featuring versatile movement and terrific long range damage capability. He's designed to be comfortable in almost any combat situation, and to be the best long-range anti-sentrygun class. His main weaknesses are designed into his primary weapon, the rocket launcher. It has a small clip size, which forces the Soldier to carefully manage his reloads, and it fires relatively slow-moving projectiles, making it ineffectual beyond short range against any opponent who dodges well, like the Scout."
"#commentary\tf2-Comment020.mp3"   "[Charlie Brown] The sniper rifle was another tricky design problem. To meet players' expectations, a sniper rifle has to be able to kill an opponent with a single shot to the head. On the flip side, we need to ensure it can't be snap fired from the hip with the same effect, because then, in the hands of an experienced player, it also becomes the game's most lethal short range weapon, negating the Sniper's primary weakness. To solve this, we implemented a charging damage meter that only appears when the sniper is zoomed. This solution has several beneficial side effects: 
The low damage both while un-zoomed and at the initial zoom ensures that Snipers can't kill opponents with impromptu snap fire. The charge time means Snipers can deal out low damage shots quickly or highly damaging shots at slow intervals, which allows opponents to overwhelm them with a coordinated rush. The high damage at the end of the charge rewards Sniper-esque behaviors, such as locating a decent vantage point and taking very deliberate shots.
"
"#commentary\tf2-Comment021.mp3"   "[Marc Scaparro] The Pyro is designed to be the best short-range combat class, aimed at encouraging players to adopt an ambush style of play. To achieve this, we made the Pyro vulnerable in the open, which forces players to seek out enclosed areas and doorways. To add to the Pyro's short range lethality, we made the flamethrower effects visually noisy, which helps disorient opponents long enough for the flames to finish them off."
"#commentary\tf2-Comment022.mp3"   "[Wade Schin] The Demoman is the most versatile combat class, capable of rapidly switching from strong offensive pushes to defensive area denial. He has the only indirect fire capability in the game, allowing him to take out sentryguns around the corner, and his sticky bombs give him a grenade jumping ability similar to that of the Soldier's rocket jumps. His sticky bombs can also prevent enemies from moving through doorways, cover a retreat, and defend control points even when the Demoman is somewhere else."
"#commentary\tf2-Comment023.mp3"   "[Keith Huggins] With its wide field of fire, the Heavy's minigun lets players who don't have great twitch-aiming skills still wade into the thick of combat. To make up for this reduction in the value of the player's aiming skill, we amplified the importance of other skills. For instance, the wind-up time before firing and the heavy's reduced speed while firing force players to learn to anticipate both the start of combat and incoming enemy attacks."
"#commentary\tf2-Comment024.mp3"   "[John Morello] The Medic is the main support class. Previous support classes we've designed had a variety of problems. They didn't require much skill, because they stayed back in defended areas, which also kept them out of the funnest parts of the game. Worst of all, this meant they weren't even terribly useful because they generally weren't near the players who most needed to be healed. We designed the Team Fortress 2 Medic to solve these problems, primarily by focusing on keeping them right in the thick of battle. Additionally, we designed the medigun to be as easy to use as possible, so that Medics can focus on survival while healing teammates. Virtually no aiming is required, which lets Medics concentrate on following their heal target, who has a huge incentive to keep his Medic benefactor safe."
"#commentary\tf2-Comment025.mp3"   "[Aaron Halifax] Our main goal in designing the Medigun was to build a strong relationship between the Medic and his healing target.  We wanted to see what we would get if we focused on creating a tight loop between two players, instead of just thinking about getting the larger team to cooperate.  The Medigun's design ensures that the Medic and his target are extremely conscious of each other, watching their health and relative positions, and making tactical choices carefully.  We wanted there to be skill involved in being a good healing target, so that Medics would seek out and latch onto skilled targets.  This helps foster the relationship we were after."
"#commentary\tf2-Comment026.mp3"   "[Jakob Jungels] Invulnerability adds an element of pacing to the multiplayer experience, which otherwise tends to have fewer emotional highs and lows than a well-crafted single player game.  When an invulnerable Medic & his friend come running in, it's an extreme high point for them.  It's also a rush for the defenders, who know they've just got to hold on for 10 seconds until invulnerability fades.  Invulnerability also sharpens pacing by helping a team push through a defensive stalemate, when the enemy team turtles up and refuses to come out of their base.  Without a lack of defensive skirmishers, it's easier for the offense to build up the invulnerability charge without interruption.  In addition, invulnerability is a great goal for the Medic and rewards him for being an effective healer. We encourage the behavior by adding more charge when the Medic is healing injured teammates than when he's healing ones who are already at full health."
"#commentary\tf2-Comment027.mp3"   "[Jeff Lane] Multiplayer communities tend to focus on a small group of maps, playing them over and over again.  Instead of producing a large number of maps, most of which would go un-played, we decided to try and build a single map with more innate replayability than any we'd built before.  With most multiplayer maps, you know what you'll be doing before the map has even finished loading.  In our case, we wanted a map where you couldn't predict even something as basic as your starting point, let alone what you would be doing when you got there.  Hydro therefore begins with a randomized starting state.  The emphasis on control of constantly shifting territories means the map rarely feels repetitive.  Meanwhile, the explicit round structure keeps teams focused, and provides regular highs and lows as the teams gain and lose territory."
"#commentary\tf2-Comment028.mp3"   "[Kerry Davis] Games usually approach stats by comparing the player to everyone else in the world.  This is only really of interest to those who are near the top.  With TF2 we decided that a better approach might be to compare stats to the player's previous successes, turning them from a worldwide comparative system into a personalized motivational one. The beginning player gets encouragement and acknowledgement that while they're not highly skilled yet, they're getting better all the time. The veterans get to see when they've managed to come close to their previous record, which encourages them beat that record.  The personal stat system also acts as a validation system. When a player feels like they've had a really good run, the stats system pops up and essentially says, 'You're right, that was a great run.'"
"#commentary\tf2-Comment029.mp3"   "[Andrea Wicklund] The more your art direction can use well-understood visual representations, the less work you have to do to explain your game elements. The earliest version of TF2 had a heavily realistic art direction. As time went on, we found this was causing us a lot of issues.  The differences between our player classes were hard to expose satisfactorily.  Weapons firing anything other than bullets were hard to visualize.  Our maps didn't make a lot of sense in the real world, where two opposing forces rarely build bases within fifty feet of one another.  In addition, the game wasn't visually distinct from our other products.  A stylized world had none of these problems:  Put the massive Heavy next to the pinstripe-suited Spy, and players understand both the numerical health differences between the classes and their very different gameplay styles.  The medic's healing beam was easily understood by playtesters when they saw the floating red plus symbols streaming into the target.  A stylized fiction can easily explain why the team's bases are built right next to each other.  Finally, a TF2 screenshot is easily recognizable, ensuring that no one will confuse it with another of our games."
"#commentary\tf2-Comment030.mp3"   "[Moby Francke] Having decided on a stylized art direction, we experimented with a variety of styles before settling on the example of J.C. Leyendecker, an enormously popular illustrator of the early 1900s. Leyendecker's rendering of clothing and material provided a great example of how to add detail to a character while keeping the clean, sharp silhouette shapes that were key to our class identification. We used normal maps to craft folds of clothing, which provided a fine level of detail when seen up close, without detracting from color values meant to draw the player's eyes to the all-important weaponry."
"#commentary\tf2-Comment031.mp3"   "[Ariel Diaz] Characters are the most important piece of art in a multiplayer game, so that is where we spent most of our effort.  We developed a read hierarchy for player models, prioritizing the information that players needed to be able to read merely by looking at the model.  Our hierarchy was this: first, what team they're on, second, what class they're playing, and third, what weapon they're wielding.  Team readability was addressed by adopting an overall color palette for each team, picking warm colors for Red and cool colors for Blu.  Class readability was addressed through the character's silhouette. Unique silhouette and animation shapes are more identifiable at far distances, and across a broader range of light levels, than any amount of other visual detail on the model. Finally, the weapon was highlighted through the textures. The areas of highest contrast, which attracts player's eyes, are all focused around the chest area of our character models, right where they hold their weapon. In addition, the subtle gradient from darkness around the character's feet, to the bright areas around the chest, also helps draw the player's eyes to the weapons."
"#commentary\tf2-Comment032.mp3"   "[Charlie Brown] Player classes form the backbone of TF2's gameplay. There are a bunch of reasons why they're a useful design tool. A class is a bottled up experience, designed to be unique relative to the other classes in the game. A player who is getting tired of one class can switch to another class and get a fresh experience. They allow us to cater to players with a variety of different skills and desires. Beginning and advanced players can have fun together. Cautious cerebral thinkers, strategic defenders, and twitch firing adrenaline junkies can all find their niche. Team Fortress 2's Class design decisions enable us to have a larger number of player abilities in the game, while still keeping a single player's decisions down to a manageable level."
"#commentary\tf2-Comment033.mp3"   "[Robin Walker] We first showed TF2 at E3 in 1999, and here we are in 2007. So what took us so long?  The short answer is that it took us this long to make something we were happy with.  The long answer requires a look at our development process.  At its core is the assumption that we don't really know ahead of time what will be fun.  We know what has been fun in the past.  But if we've got 3 ideas on the table, we can't say for sure which one will be the most fun.  So, we've focused on developing a repeatable process that will find out.  It's based on a cycle of constant iteration, where evaluation is done by watching as many people play the game as possible.  In developing TF2, we tried out many, many features-a few of which made it to the final product, but most of which were cut.  For example, our initial versions of TF2 were focused on trying to build a game around the concept of a commander, a single player who had a real-time-strategy view of the battlefield.  He was responsible for building structures and providing a unifying strategy for the team.  But there were significant design challenges involved.  For instance, how do we design the game such that the commander can have fun, and at same time ensure that the players down on the ground can have fun?  How do we ensure that the players & the commander value the output of the other?  How do we ensure that the game is still fun if you have a terrible commander, or conversely, if you're a great commander with a terrible team?  We spent many months working on these and other issues, and never reached a point where we were satisfied.  In addition, our game had become overly complex, due to our attempts to add a strategy layer deep enough to warrant the addition of the commander in the first place.  In the end, we made the hard decision to remove him from the game and moved on."
"#commentary\tf2-Comment034.mp3"   "[Kelly Thornton] Critical hits are one of the features that resulted from our focus on pacing. The critical hit system attempts to slightly influence the highs and lows of the game, by increasing the chance of a critical hit based upon the player's recent performance. In summary, the better you're doing, the more likely you'll continue to do well. This helps create those rare high moments, where a single player goes on a rampage and gets 3 or 4 kills in rapid succession."
"#commentary\tf2-Comment035.mp3"   "[Adrian Finol] One of the main changes between Team Fortress Classic and Team Fortress 2 was the removal of thrown grenades. 
Most classes could carry a standard hand grenade along with a secondary grenade, tied more closely to the class.  Team Fortress 2's focus on unique class roles led us to notice that the standard hand grenade was a more powerful combat decider than some of the primary weapons.  This made the classes more similar in combat-not a desired effect.  In addition, when we looked at some of Team Fortress Classic's map stalemates, they often resulted from large amounts of grenade spam. Two cases were particularly problematic:  That of players throwing grenades repeatedly through doorways, hoping to kill any enemies who might be there, and players on the verge of death throwing all their grenades in rapid succession, hoping to get a kill after they die.  Removing standard hand grenades made the game more fun almost immediately, especially for new players who were often confused as to why they died, when a grenade went off at their feet. When we examined the class-specific grenades, we found similar problems.  Eliminating them from playtests gave us yet another boost in making the game more fun.  Once we'd decided on removal, we analyzed each class to see what capabilities might have been lost as a result of the decision.  In some cases we added other capabilities, where we felt a class had lost the ability to make some interesting decisions, related to its special grenade type.
"
"#commentary\tf2-Comment036.mp3"   "[Hamish McKenzie] Late in the project, while other parts of the game were being finished up, we found ourselves with some time left over for extra animation.  There were several ideas on the table, including weapon-specific taunt animations.  When evaluating a feature, we look at how many other features it connects to, and taunts were the clear winner.  They play well with the killer freeze-cam, adding to the relationship between the nemesis and his victim.  They gave us a highly visible place to show off our new facial animation technology, allowing the player to examine it from all angles. Finally, TF2's characters have a lot of personality, and taunts were the perfect way to show that personality through animation and voice acting."
"#commentary\tf2-Comment037.mp3"   "[Eric Smith] For Half-Life 2 we developed something called Response Rules, a system that lets us fine-tune the way characters speak lines of dialog in response to game events that are not completely predictable.  In Team Fortress 2, we extended Response Rules to the multiplayer environment for the first time.  The Response Rule system works by listing speech concepts in a simple text file; the game code then makes characters attempt to speak when the rules or conditions defined in the text file are met in the game. For instance, when a player reloads his weapon, this signals the Response Rule system that now would be an appropriate time to speak a line about reloading. The Response Rule system checks the state of the world, and matches it to a set of rules that determine the best line of dialog to use for that speech concept.  If the player's health is low, he may speak a different reloading line than if he is completely healthy.  He could play a special line if he has killed more than two enemies in the last 20 seconds, another set of lines if he's underwater, and so on.  Keeping dialog and rules in script files gives the game's writers the ability to add speech to the game without needing any code support.
"
"#commentary\tf2-Comment038.mp3"   "[Moby Francke] In our early discussions of rendering styles for the characters, we decided we wanted them to have a look that was illustrative or stylized, without going to the extremes of most toon shaders. We wanted softer lines for shading than was typical for this sort of rendering.  So, we used a 2-D texture to define the lighting on the characters, and at the point where light and dark meet, we added a hint of warmth to give it that burst of color at the transition. Once we had achieved the right shading model, we added a rim-term to the characters, so they would have a nice highlight around the edges of their silhouettes, which helps them to stand out from the surrounding 3d world."
"#commentary\tf2-Comment039.mp3"   "[Dhabih Eng] The challenge of the particle system was to create effects that were fun and visually exciting, without being so 'over the top' that no one could read their meaning in the game.  In a typical match, there are so many effects onscreen at the same time, that the biggest danger is visual clutter.  Therefore, the effects were refined to be cleaner and simpler.  Those that were most important for gameplay were made easier to see, while those that were mainly eye-candy were allowed to fall into the background.  "
"#commentary\tf2-Comment040.mp3"   "[Robin Walker] With nine classes of characters, and so many weapons and unique abilities, one of our biggest challenges was exposing all these combinations to players without overwhelming them.  Even the shortlist of essential information is intimidating, including map goals, the whereabouts of their friends, who's shooting them with what weapon, and so on.  We didn't have any way to make all of this information visual, so first we had to prioritize and come up with an essential list of things every player needed to know in order to just have fun.  Information they could learn by playing the game-such as map layout-was of secondary importance; but there was also information, such as the Medic's invulnerability charge, that would be completely invisible unless we exposed it.  We tried to avoid attaching 2D elements to the HUD as much as possible, since we wanted players to be looking at the 3D world we'd built rather than some abstract representation.  For example, players always see their own team's spies as a spy, but they need to know how the spy is disguised to the other team.  We tried a quick hack where we put an icon representing the spy's current disguise floating above his head.  The icon proved baffling to playtesters.   When we tackled the problem by putting cut-out paper masks on the spy, it not only fit the humorous style of the game, but it let players get all pertinent information directly from a quick look at the spy's model, thus keeping them focused on the characters and on the action of the game.  We took this as a lesson, in how holding ourselves to a strong design principle can often force us to come up with better solutions, than if we'd taken the easy route."
"#commentary\tf2-Comment041.mp3"   "[Jason Mitchell] To achieve a style of character shading which is consistent with the early 20th Century commercial illustrations that influenced our art direction, we alter the diffuse lighting on characters. Here, we can see the Heavy as he appears in Team Fortress 2, using this type of shading style. Note the tight transition between the light and dark sides of the skin on his upper arm. Using a traditional shading model as seen here, the character lighting appears too soft and lacks the distinctive look seen in hand painted illustrations. Our shading model, however, captures the dramatic transition between light and dark and helps to define the unmistakable look of Team Fortress 2. Another facet of illustrative shading is the use of rim highlights to accentuate the silhouettes of characters. Without the rim lighting, the characters tend to blend into the scenery. With the rim lighting, which you can see specifically on the Heavy's shoulders, neck, and head in this example, our characters are visible against the rest of the scene and better fit the art style of Team Fortress 2."
"#commentary\tf2-Comment042.mp3"   "[Alden Kroll] Two-dimensional HUD elements present a particular art problem, because they have to look good and sharp no matter what resolution the user is running their game at. Given today's availability of high resolution wide-screen displays, this can require a lot of texture memory and a lot of work anticipating different display resolutions. The problem for TF2 was even more daunting because of our desire to include a lot of smooth curved elements in our HUD. We developed a new shader system for drawing 'line art' images.  The system allows us to create images at a fixed resolution that produced smooth silhouettes even when scaled up to a very high resolution. This shader system also handles outlining and drop-shadows, and can be applied in the 3D space to world elements such as signs.  "
"#commentary\tf2-Comment043.mp3"   "[Chris Green] We intended Team Fortress 2 to feature many special particle effects to enhance the wide variety of weapons and class abilities. In previous versions of the Source engine, all particle effects required that custom code be written by the programmers. For Team Fortress 2, we created a system where designers can rapidly create new particle systems and iteratively refine existing ones, without programmer involvement. An in-game editor allows designers to edit the definitions of particle systems and immediately preview effects in the game itself.  The editor also allows artists to connect modular effect 'building blocks' to create complex visual effects. As for the particle system itself, we have offloaded many of the system calculations to the graphics accelerator, which allows us to increase the number of particles onscreen without reducing the framerate."
"#commentary\tf2-Comment044.mp3"   "[Eric Kirchmer] Once we had a handle on the art direction for our world and characters, we turned our attention to the weapons and gadgets. While these objects have some grounding in reality, they usually diverge in significant ways. For instance, the soldier's rocket launcher fits the general mold of a shoulder mounted rocket launcher, but somehow manages to hold four rockets in a clip. To justify this, and play up our stylized Spy-tech fiction, we designed the weapons to look like customized pieces of hardware, personalized and modified by each character to suit his own ends. In keeping with the industrial theme of the game, we looked to 60's era product design principles for the primary weapons, then focused on musical instruments for secondary and melee weapons, thinking these would reinforce the connection between the secondary items and each character's personality."
"#commentary\tf2-Comment045.mp3"   "[Jim Hughes] When designing areas for high levels of combat, we try to avoid complexity and chaos.  Complex geometry confuses players, making it hard for them to track enemies, and interfering with their movement and aiming during combat. The most chaotic combat tends to occur when the size of the room fails to support the number of players fighting in it.  In this final area of the map, we wanted a freeform battle to rage for some time before anyone could achieve a decisive victory.  To achieve this, we built a wide open area with several entrances, and gave players a variety of attack and defense options at various heights. Rather than depend on elevators and ladders, we relied on ramps, since these allow freedom of movement at all times instead of confining players.  Through playtesting we made many changes to the dimensions of the room, the size of cover elements, and the size of the entrances, thus ensuring the area could accommodate a battle of many players.  "
"#commentary\tf2-Comment046.mp3"   "[Aaron Barber] Unlike maps in TF such as 2fort and Well, which have progressively blue and red sides, Hydro's four main arenas can be owned by one team or the other. We needed an overall theme that justified structures like rock walls and tunnels, but which also had a neutral color scheme. We chose a desert theme with a palette of reddish-brown rock, cool blue sky and neutral light colors that complement the surrounding area. The colors of the seperate areas vary slightly but still key together.
"
"#commentary\tf2-Comment047.mp3"   "[Chet Faliszek] The announcer for Team Fortress 2, Ellen McLain, has the rare distinction of being the only voice actor to perform in all the products in the Orange box.  For her role in Team Fortress 2, we had Ellen try various reads on the same lines letting her ad-lib different personalities.  On the 5th try, she came up with the winner. Her disappointed and slightly angry evil overlord clearly lets you know, in the world of Team Fortress a tie does not mean everyone wins, but that everyone loses."
"#commentary\tf2-Comment048.mp3"   "[Laura Dubuk] This area presented a difficult problem. Since the arena is primarily an interior, there wasn't much we could do to alter its basic structure, so we concentrated on careful management of the interior shapes to create an iconic space. The building is essentially a box with big rectangular windows, contrasted by round elements (generators) in the center. To create depth and parallax, we added linear elements such as railings and cables. We used contrasting values of dark and light on the floor, with walkways to create an interesting value pattern. All these elements work together to draw the player's eye to the flag--which must always be the focal point of the arena."
}
}
